{
  "interactions" : [
    {
      "response" : {
        "status" : 200,
        "headers" : {
          "Content-Type" : "application\/json; charset=utf-8",
          "Access-Control-Allow-Methods" : "GET, POST",
          "Content-Length" : "5157",
          "X-Content-Type-Options" : "nosniff",
          "Access-Control-Allow-Credentials" : "false",
          "Access-Control-Allow-Origin" : "*",
          "Date" : "Mon, 29 Oct 2018 11:41:47 GMT",
          "Content-Encoding" : "gzip",
          "Cache-Control" : "private"
        },
        "body" : {
          "has_more" : true,
          "items" : [
            {
              "owner" : {
                "link" : "https:\/\/stackoverflow.com\/users\/10092191\/sruthi-c-s",
                "profile_image" : "https:\/\/lh4.googleusercontent.com\/-5w1qgPFKlFk\/AAAAAAAAAAI\/AAAAAAAAAAA\/AAnnY7p579PSjoarkb8lfFl8fbhxPt4p3w\/mo\/photo.jpg?sz=128",
                "user_id" : 10092191,
                "display_name" : "Sruthi C S",
                "reputation" : 1,
                "user_type" : "registered"
              },
              "is_answered" : false,
              "answer_count" : 0,
              "score" : 0,
              "creation_date" : 1540812574,
              "title" : "searchBar in Swift",
              "last_activity_date" : 1540812574,
              "link" : "https:\/\/stackoverflow.com\/questions\/53044583\/searchbar-in-swift",
              "question_id" : 53044583,
              "tags" : [
                "swift",
                "uitableview",
                "searchbar",
                "jsondecoder"
              ],
              "view_count" : 10
            },
            {
              "answer_count" : 0,
              "last_edit_date" : 1540812454,
              "owner" : {
                "link" : "https:\/\/stackoverflow.com\/users\/10574113\/jappy",
                "profile_image" : "https:\/\/www.gravatar.com\/avatar\/eb3ff021db74b7d15eb3c6ca3b939979?s=128&d=identicon&r=PG&f=1",
                "user_id" : 10574113,
                "display_name" : "jappy",
                "reputation" : 1,
                "user_type" : "registered"
              },
              "link" : "https:\/\/stackoverflow.com\/questions\/53043063\/api-working-in-postman-not-working-in-react-native-and-nativeswift",
              "tags" : [
                "swift",
                "react-native",
                "alamofire",
                "urlrequest"
              ],
              "view_count" : 26,
              "creation_date" : 1540807503,
              "is_answered" : false,
              "title" : "Api working in Postman not working in React-native and Native(Swift)",
              "last_activity_date" : 1540812454,
              "question_id" : 53043063,
              "score" : 0
            },
            {
              "owner" : {
                "accept_rate" : 28,
                "user_type" : "registered",
                "link" : "https:\/\/stackoverflow.com\/users\/1213364\/vineesh-tp",
                "user_id" : 1213364,
                "display_name" : "Vineesh TP",
                "reputation" : 4586,
                "profile_image" : "https:\/\/i.stack.imgur.com\/abvmH.png?s=128&g=1"
              },
              "is_answered" : false,
              "answer_count" : 1,
              "score" : -2,
              "creation_date" : 1540790983,
              "title" : "How to create share options like Andoid in Swift",
              "last_activity_date" : 1540811923,
              "link" : "https:\/\/stackoverflow.com\/questions\/53039255\/how-to-create-share-options-like-andoid-in-swift",
              "question_id" : 53039255,
              "tags" : [
                "ios",
                "swift",
                "share"
              ],
              "view_count" : 43
            },
            {
              "answer_count" : 0,
              "last_edit_date" : 1540811816,
              "owner" : {
                "link" : "https:\/\/stackoverflow.com\/users\/8952180\/sourav",
                "profile_image" : "https:\/\/www.gravatar.com\/avatar\/da7156524ad7bab2a379f147651db45a?s=128&d=identicon&r=PG&f=1",
                "user_id" : 8952180,
                "display_name" : "sourav",
                "reputation" : 6,
                "user_type" : "registered"
              },
              "link" : "https:\/\/stackoverflow.com\/questions\/53044234\/how-to-restrict-character-to-be-changed-into-%c3%a2%e2%82%ac%c5%93-while-exporting-any-textfield",
              "tags" : [
                "swift",
                "macos",
                "cocoa",
                "nstextfield"
              ],
              "view_count" : 12,
              "creation_date" : 1540811439,
              "is_answered" : false,
              "title" : "How to restrict &quot; character to be changed into &#226;€œ while exporting any textfield string value to csv in swift?",
              "last_activity_date" : 1540811816,
              "question_id" : 53044234,
              "score" : 0
            },
            {
              "answer_count" : 4,
              "last_edit_date" : 1540807276,
              "owner" : {
                "accept_rate" : 54,
                "user_type" : "registered",
                "link" : "https:\/\/stackoverflow.com\/users\/2560571\/chief-madog",
                "user_id" : 2560571,
                "display_name" : "Chief Madog",
                "reputation" : 525,
                "profile_image" : "https:\/\/www.gravatar.com\/avatar\/8d2281ba679594af260703faff8431dc?s=128&d=identicon&r=PG"
              },
              "link" : "https:\/\/stackoverflow.com\/questions\/53042896\/is-there-alternative-to-self-view-isuserinteractionenabled-false-in-swift",
              "tags" : [
                "swift"
              ],
              "view_count" : 31,
              "creation_date" : 1540806993,
              "is_answered" : true,
              "title" : "Is There Alternative to self.view.isUserInteractionEnabled = false in Swift?",
              "last_activity_date" : 1540811802,
              "question_id" : 53042896,
              "score" : 1
            },
            {
              "answer_count" : 10,
              "last_edit_date" : 1495535491,
              "owner" : {
                "accept_rate" : 80,
                "user_type" : "registered",
                "link" : "https:\/\/stackoverflow.com\/users\/3606682\/user3606682",
                "user_id" : 3606682,
                "display_name" : "user3606682",
                "reputation" : 477,
                "profile_image" : "https:\/\/www.gravatar.com\/avatar\/50388434f9fbe7d0721c6da048804431?s=128&d=identicon&r=PG&f=1"
              },
              "link" : "https:\/\/stackoverflow.com\/questions\/32163848\/how-to-convert-string-to-md5-hash-using-ios-swift",
              "tags" : [
                "ios",
                "swift",
                "md5"
              ],
              "view_count" : 49407,
              "creation_date" : 1440311316,
              "is_answered" : true,
              "title" : "How to convert string to MD5 hash using ios swift",
              "accepted_answer_id" : 32166735,
              "last_activity_date" : 1540811793,
              "question_id" : 32163848,
              "score" : 64
            },
            {
              "answer_count" : 21,
              "last_edit_date" : 1409579531,
              "owner" : {
                "accept_rate" : 89,
                "user_type" : "registered",
                "link" : "https:\/\/stackoverflow.com\/users\/2367491\/code-cookies",
                "user_id" : 2367491,
                "display_name" : "code_cookies",
                "reputation" : 1127,
                "profile_image" : "https:\/\/www.gravatar.com\/avatar\/e205282965a415a651bfb1bc1c12f152?s=128&d=identicon&r=PG"
              },
              "protected_date" : 1492128720,
              "tags" : [
                "json",
                "swift",
                "html-entities"
              ],
              "link" : "https:\/\/stackoverflow.com\/questions\/25607247\/how-do-i-decode-html-entities-in-swift",
              "view_count" : 44720,
              "creation_date" : 1409579228,
              "is_answered" : true,
              "title" : "How do I decode HTML entities in swift?",
              "accepted_answer_id" : 25607542,
              "last_activity_date" : 1540811344,
              "question_id" : 25607247,
              "score" : 89
            },
            {
              "answer_count" : 6,
              "owner" : {
                "accept_rate" : 90,
                "user_type" : "registered",
                "link" : "https:\/\/stackoverflow.com\/users\/2554605\/michael-yaworski",
                "user_id" : 2554605,
                "display_name" : "Michael Yaworski",
                "reputation" : 9259,
                "profile_image" : "https:\/\/graph.facebook.com\/1374587039\/picture?type=large"
              },
              "link" : "https:\/\/stackoverflow.com\/questions\/37903124\/set-background-gradient-on-button-in-swift",
              "tags" : [
                "ios",
                "swift",
                "button",
                "linear-gradients"
              ],
              "view_count" : 21243,
              "creation_date" : 1466299337,
              "is_answered" : true,
              "title" : "Set Background Gradient on Button in Swift",
              "accepted_answer_id" : 37903364,
              "last_activity_date" : 1540811188,
              "question_id" : 37903124,
              "score" : 11
            },
            {
              "answer_count" : 2,
              "last_edit_date" : 1464177807,
              "owner" : {
                "accept_rate" : 68,
                "user_type" : "registered",
                "link" : "https:\/\/stackoverflow.com\/users\/203549\/david-james",
                "user_id" : 203549,
                "display_name" : "David James",
                "reputation" : 1184,
                "profile_image" : "https:\/\/i.stack.imgur.com\/VcEPC.jpg?s=128&g=1"
              },
              "link" : "https:\/\/stackoverflow.com\/questions\/37436413\/how-to-import-swift-module-with-plus-sign-in-xcode",
              "tags" : [
                "xcode",
                "swift",
                "cocoapods"
              ],
              "view_count" : 416,
              "creation_date" : 1464177426,
              "is_answered" : true,
              "title" : "How to import Swift module with plus (+) sign in Xcode",
              "accepted_answer_id" : 37436698,
              "last_activity_date" : 1540810419,
              "question_id" : 37436413,
              "score" : 7
            },
            {
              "answer_count" : 2,
              "last_edit_date" : 1540789124,
              "owner" : {
                "link" : "https:\/\/stackoverflow.com\/users\/10571856\/swiftenthusiast",
                "profile_image" : "https:\/\/www.gravatar.com\/avatar\/e21b7391c3ca3a43ffd5c61784a5ff23?s=128&d=identicon&r=PG&f=1",
                "user_id" : 10571856,
                "display_name" : "swiftEnthusiast",
                "reputation" : 1,
                "user_type" : "registered"
              },
              "link" : "https:\/\/stackoverflow.com\/questions\/53038871\/clickable-image-as-nav-bar-title-in-swift",
              "tags" : [
                "ios",
                "swift",
                "uinavigationcontroller",
                "uibutton",
                "uinavigationbar"
              ],
              "view_count" : 41,
              "creation_date" : 1540788266,
              "is_answered" : false,
              "title" : "Clickable Image as Nav Bar Title in Swift",
              "last_activity_date" : 1540810371,
              "question_id" : 53038871,
              "score" : 0
            },
            {
              "closed_reason" : "off-topic",
              "answer_count" : 2,
              "last_edit_date" : 1450801729,
              "owner" : {
                "link" : "https:\/\/stackoverflow.com\/users\/3218559\/asif-bilal",
                "profile_image" : "https:\/\/i.stack.imgur.com\/Ucrs9.jpg?s=128&g=1",
                "user_id" : 3218559,
                "display_name" : "Asif Bilal",
                "reputation" : 3670,
                "user_type" : "registered"
              },
              "link" : "https:\/\/stackoverflow.com\/questions\/24056985\/check-odd-even-numbers-in-swift-ios",
              "tags" : [
                "swift"
              ],
              "view_count" : 41588,
              "creation_date" : 1401961939,
              "is_answered" : true,
              "title" : "Check Odd &amp; Even numbers in Swift (iOS)",
              "accepted_answer_id" : 24057238,
              "last_activity_date" : 1540809994,
              "question_id" : 24056985,
              "score" : 36,
              "closed_date" : 1401983424
            },
            {
              "owner" : {
                "link" : "https:\/\/stackoverflow.com\/users\/6869246\/danil",
                "profile_image" : "https:\/\/www.gravatar.com\/avatar\/d6495519d0e4f65e13e0aef1fd161968?s=128&d=identicon&r=PG&f=1",
                "user_id" : 6869246,
                "display_name" : "Danil",
                "reputation" : 18,
                "user_type" : "registered"
              },
              "is_answered" : false,
              "answer_count" : 1,
              "score" : 0,
              "creation_date" : 1540808698,
              "title" : "How to access private variable in swift child class from objective-c superclass?",
              "last_activity_date" : 1540809758,
              "link" : "https:\/\/stackoverflow.com\/questions\/53043428\/how-to-access-private-variable-in-swift-child-class-from-objective-c-superclass",
              "question_id" : 53043428,
              "tags" : [
                "swift",
                "inheritance",
                "private",
                "kvc"
              ],
              "view_count" : 23
            },
            {
              "answer_count" : 2,
              "owner" : {
                "link" : "https:\/\/stackoverflow.com\/users\/10574136\/randomizedlife",
                "profile_image" : "https:\/\/lh5.googleusercontent.com\/-3DdkXtEq-kA\/AAAAAAAAAAI\/AAAAAAAAADc\/RSpsjDeJ9J4\/photo.jpg?sz=128",
                "user_id" : 10574136,
                "display_name" : "randomizedLife",
                "reputation" : 3,
                "user_type" : "registered"
              },
              "link" : "https:\/\/stackoverflow.com\/questions\/53043196\/swift-uitableview-disable-move-last-row",
              "tags" : [
                "ios",
                "swift",
                "uitableview",
                "move"
              ],
              "view_count" : 45,
              "creation_date" : 1540807878,
              "is_answered" : true,
              "title" : "swift UITableview disable move last row",
              "accepted_answer_id" : 53043634,
              "last_activity_date" : 1540809308,
              "question_id" : 53043196,
              "score" : 0
            },
            {
              "owner" : {
                "accept_rate" : 53,
                "user_type" : "registered",
                "link" : "https:\/\/stackoverflow.com\/users\/3957878\/s-hoseinpoor",
                "user_id" : 3957878,
                "display_name" : "S.Hoseinpoor",
                "reputation" : 89,
                "profile_image" : "https:\/\/i.stack.imgur.com\/bHpaG.png?s=128&g=1"
              },
              "is_answered" : true,
              "answer_count" : 1,
              "score" : 1,
              "creation_date" : 1540806447,
              "title" : "Swift AES Encryption throws error While in Android doesn&#39;t",
              "last_activity_date" : 1540808612,
              "link" : "https:\/\/stackoverflow.com\/questions\/53042724\/swift-aes-encryption-throws-error-while-in-android-doesnt",
              "question_id" : 53042724,
              "tags" : [
                "android",
                "swift",
                "aes"
              ],
              "view_count" : 20
            },
            {
              "owner" : {
                "link" : "https:\/\/stackoverflow.com\/users\/10356935\/jgchad",
                "profile_image" : "https:\/\/www.gravatar.com\/avatar\/a23a95523a9df3d5fa01d8a7dd88c4e6?s=128&d=identicon&r=PG&f=1",
                "user_id" : 10356935,
                "display_name" : "jgchad",
                "reputation" : 1,
                "user_type" : "registered"
              },
              "is_answered" : false,
              "answer_count" : 0,
              "score" : 0,
              "creation_date" : 1540807985,
              "title" : "Is it possible to record and replay WebSocket traffic in realime in swift?",
              "last_activity_date" : 1540807985,
              "link" : "https:\/\/stackoverflow.com\/questions\/53043222\/is-it-possible-to-record-and-replay-websocket-traffic-in-realime-in-swift",
              "question_id" : 53043222,
              "tags" : [
                "ios",
                "networking",
                "websocket",
                "scenekit"
              ],
              "view_count" : 4
            },
            {
              "answer_count" : 2,
              "last_edit_date" : 1485857858,
              "owner" : {
                "accept_rate" : 59,
                "user_type" : "registered",
                "link" : "https:\/\/stackoverflow.com\/users\/4980644\/umair-afzal",
                "user_id" : 4980644,
                "display_name" : "Umair Afzal",
                "reputation" : 2428,
                "profile_image" : "https:\/\/graph.facebook.com\/729140533875629\/picture?type=large"
              },
              "link" : "https:\/\/stackoverflow.com\/questions\/41952036\/ambiguous-reference-to-member-swift-3",
              "tags" : [
                "ios",
                "oauth-2.0",
                "swift2",
                "swift3"
              ],
              "view_count" : 19847,
              "creation_date" : 1485848105,
              "is_answered" : true,
              "title" : "Ambiguous reference to member Swift 3",
              "accepted_answer_id" : 41952959,
              "last_activity_date" : 1540807542,
              "question_id" : 41952036,
              "score" : 11
            },
            {
              "answer_count" : 1,
              "last_edit_date" : 1540807180,
              "owner" : {
                "link" : "https:\/\/stackoverflow.com\/users\/10573523\/chuthienphuoc",
                "profile_image" : "https:\/\/lh6.googleusercontent.com\/-flb5YaUiIkw\/AAAAAAAAAAI\/AAAAAAAAAAA\/ABtNlbCtbQ8kS134ytRbl8HMRGisMuo40Q\/mo\/photo.jpg?sz=128",
                "user_id" : 10573523,
                "display_name" : "chuthienphuoc",
                "reputation" : 3,
                "user_type" : "registered"
              },
              "link" : "https:\/\/stackoverflow.com\/questions\/53041740\/firebase-ios-on-swift-use-of-undeclared-type-databasereference",
              "tags" : [
                "ios",
                "swift",
                "database",
                "xcode",
                "firebase"
              ],
              "view_count" : 17,
              "creation_date" : 1540802896,
              "is_answered" : true,
              "title" : "Firebase IOS on Swift: Use of undeclared type &#39;DatabaseReference&#39;",
              "accepted_answer_id" : 53042234,
              "last_activity_date" : 1540807180,
              "question_id" : 53041740,
              "score" : 0
            },
            {
              "answer_count" : 0,
              "last_edit_date" : 1540806581,
              "owner" : {
                "link" : "https:\/\/stackoverflow.com\/users\/10573661\/albert-li",
                "profile_image" : "https:\/\/www.gravatar.com\/avatar\/3e096ff69bb9c3ae7773d8b4c1817c1a?s=128&d=identicon&r=PG&f=1",
                "user_id" : 10573661,
                "display_name" : "Albert Li",
                "reputation" : 1,
                "user_type" : "registered"
              },
              "link" : "https:\/\/stackoverflow.com\/questions\/53041446\/when-i-create-new-target-in-objective-c-like-notification-content-extension-o",
              "tags" : [
                "ios",
                "objective-c",
                "swift",
                "xcode"
              ],
              "view_count" : 20,
              "creation_date" : 1540801585,
              "is_answered" : false,
              "title" : "When I create new target in Objective-C, like &quot;Notification Content Extension&quot; or&quot; Share Extension&quot; and so on. Then build failure. But Swift is Ok",
              "last_activity_date" : 1540806581,
              "question_id" : 53041446,
              "score" : -1
            },
            {
              "answer_count" : 1,
              "last_edit_date" : 1540804155,
              "owner" : {
                "link" : "https:\/\/stackoverflow.com\/users\/9968874\/athreya-daniel",
                "profile_image" : "https:\/\/lh4.googleusercontent.com\/-PIb7bjX8F4g\/AAAAAAAAAAI\/AAAAAAAAAFA\/L3NMHBNj120\/photo.jpg?sz=128",
                "user_id" : 9968874,
                "display_name" : "Athreya Daniel",
                "reputation" : 29,
                "user_type" : "registered"
              },
              "link" : "https:\/\/stackoverflow.com\/questions\/53036958\/accessing-nested-key-value-pairs-in-swift",
              "tags" : [
                "swift",
                "xcode",
                "firebase",
                "firebase-realtime-database"
              ],
              "view_count" : 27,
              "creation_date" : 1540769265,
              "is_answered" : false,
              "title" : "Accessing nested key-value pairs in swift",
              "last_activity_date" : 1540806008,
              "question_id" : 53036958,
              "score" : 0
            },
            {
              "answer_count" : 1,
              "last_edit_date" : 1540805978,
              "owner" : {
                "link" : "https:\/\/stackoverflow.com\/users\/10545337\/enkha",
                "profile_image" : "https:\/\/i.stack.imgur.com\/5zSgW.jpg?s=128&g=1",
                "user_id" : 10545337,
                "display_name" : "Enkha",
                "reputation" : 34,
                "user_type" : "registered"
              },
              "link" : "https:\/\/stackoverflow.com\/questions\/53041027\/for-in-go-to-next-when-i-want-in-swift-4",
              "tags" : [
                "ios",
                "swift"
              ],
              "view_count" : 62,
              "creation_date" : 1540799683,
              "is_answered" : false,
              "title" : "For in, go to next when I want in Swift 4",
              "last_activity_date" : 1540805978,
              "question_id" : 53041027,
              "score" : 2
            },
            {
              "answer_count" : 0,
              "last_edit_date" : 1540805152,
              "owner" : {
                "link" : "https:\/\/stackoverflow.com\/users\/6345144\/alexander",
                "profile_image" : "https:\/\/www.gravatar.com\/avatar\/64f65d28c2052f756c10f3a9dad44fbd?s=128&d=identicon&r=PG&f=1",
                "user_id" : 6345144,
                "display_name" : "Alexander",
                "reputation" : 61,
                "user_type" : "registered"
              },
              "link" : "https:\/\/stackoverflow.com\/questions\/53041490\/swift-quadratic-curves-path-not-closing-with-a-curve",
              "tags" : [
                "ios",
                "swift",
                "uibezierpath"
              ],
              "view_count" : 35,
              "creation_date" : 1540801817,
              "is_answered" : false,
              "title" : "Swift quadratic curves path not closing with a curve",
              "last_activity_date" : 1540805152,
              "question_id" : 53041490,
              "score" : 0
            },
            {
              "answer_count" : 10,
              "last_edit_date" : 1540803802,
              "owner" : {
                "accept_rate" : 25,
                "user_type" : "registered",
                "link" : "https:\/\/stackoverflow.com\/users\/2621633\/nkurapati",
                "user_id" : 2621633,
                "display_name" : "NKurapati",
                "reputation" : 300,
                "profile_image" : "https:\/\/i.stack.imgur.com\/KBRZY.jpg?s=128&g=1"
              },
              "link" : "https:\/\/stackoverflow.com\/questions\/30715212\/select-video-from-photolibrary-in-ios-using-swift",
              "tags" : [
                "ios",
                "swift",
                "uiimagepickercontrollermediatype",
                "mobilecoreservices"
              ],
              "view_count" : 20633,
              "creation_date" : 1433783481,
              "is_answered" : true,
              "title" : "Select video from PhotoLibrary in iOS using Swift",
              "last_activity_date" : 1540803802,
              "question_id" : 30715212,
              "score" : 14
            },
            {
              "owner" : {
                "accept_rate" : 86,
                "user_type" : "registered",
                "link" : "https:\/\/stackoverflow.com\/users\/5470443\/k-frederic",
                "user_id" : 5470443,
                "display_name" : "K.Frederic",
                "reputation" : 347,
                "profile_image" : "https:\/\/www.gravatar.com\/avatar\/5165fcd33ef8597578e460b73d091164?s=128&d=identicon&r=PG&f=1"
              },
              "is_answered" : false,
              "answer_count" : 1,
              "score" : 0,
              "creation_date" : 1540800981,
              "title" : "Can&#39;t adjust layouts on multiple devices in Swift",
              "last_activity_date" : 1540803218,
              "link" : "https:\/\/stackoverflow.com\/questions\/53041294\/cant-adjust-layouts-on-multiple-devices-in-swift",
              "question_id" : 53041294,
              "tags" : [
                "ios",
                "swift",
                "xcode"
              ],
              "view_count" : 24
            },
            {
              "owner" : {
                "link" : "https:\/\/stackoverflow.com\/users\/8366535\/jeri-p-m",
                "profile_image" : "https:\/\/lh6.googleusercontent.com\/-Y0YR6-2l5SI\/AAAAAAAAAAI\/AAAAAAAAADo\/fGSuKUsTISQ\/photo.jpg?sz=128",
                "user_id" : 8366535,
                "display_name" : "Jeri P.M",
                "reputation" : 32,
                "user_type" : "registered"
              },
              "is_answered" : false,
              "answer_count" : 1,
              "score" : 0,
              "creation_date" : 1540787443,
              "title" : "How to filter extension in photoLibrary UIimgaePickerController swift",
              "last_activity_date" : 1540799397,
              "link" : "https:\/\/stackoverflow.com\/questions\/53038759\/how-to-filter-extension-in-photolibrary-uiimgaepickercontroller-swift",
              "question_id" : 53038759,
              "tags" : [
                "swift",
                "video",
                "filter",
                "uiimagepickercontroller",
                "mp4"
              ],
              "view_count" : 21
            },
            {
              "answer_count" : 0,
              "last_edit_date" : 1540799175,
              "owner" : {
                "link" : "https:\/\/stackoverflow.com\/users\/10539363\/akshay-rapatwar",
                "profile_image" : "https:\/\/lh3.googleusercontent.com\/-W9qnCrg2Jng\/AAAAAAAAAAI\/AAAAAAAAAAc\/Jfvxt0cq7e8\/photo.jpg?sz=128",
                "user_id" : 10539363,
                "display_name" : "Akshay Rapatwar",
                "reputation" : 13,
                "user_type" : "registered"
              },
              "link" : "https:\/\/stackoverflow.com\/questions\/53040855\/how-to-store-gtmoauth2authentication-in-swift",
              "tags" : [
                "swift",
                "google-drive-sdk",
                "google-signin"
              ],
              "view_count" : 11,
              "creation_date" : 1540798851,
              "is_answered" : false,
              "title" : "how to store GTMOAuth2Authentication in swift?",
              "last_activity_date" : 1540799175,
              "question_id" : 53040855,
              "score" : 0
            },
            {
              "owner" : {
                "link" : "https:\/\/stackoverflow.com\/users\/9315099\/deepali-verma",
                "profile_image" : "https:\/\/www.gravatar.com\/avatar\/e5a5de69941200e3ad796e832d9412c3?s=128&d=identicon&r=PG&f=1",
                "user_id" : 9315099,
                "display_name" : "Deepali Verma",
                "reputation" : 19,
                "user_type" : "registered"
              },
              "is_answered" : false,
              "answer_count" : 0,
              "score" : -1,
              "creation_date" : 1540799119,
              "title" : "Use linkedIn-sdk in a swift framework",
              "last_activity_date" : 1540799119,
              "link" : "https:\/\/stackoverflow.com\/questions\/53040921\/use-linkedin-sdk-in-a-swift-framework",
              "question_id" : 53040921,
              "tags" : [
                "ios",
                "swift",
                "frameworks",
                "linkedin"
              ],
              "view_count" : 19
            },
            {
              "owner" : {
                "link" : "https:\/\/stackoverflow.com\/users\/1528707\/domc",
                "profile_image" : "https:\/\/www.gravatar.com\/avatar\/79d042e9bbb79a97be0845c2ca1ce707?s=128&d=identicon&r=PG",
                "user_id" : 1528707,
                "display_name" : "domc",
                "reputation" : 41,
                "user_type" : "registered"
              },
              "is_answered" : false,
              "answer_count" : 2,
              "score" : 1,
              "creation_date" : 1540797713,
              "title" : "Swift Sorting an enum by its case names",
              "last_activity_date" : 1540798231,
              "link" : "https:\/\/stackoverflow.com\/questions\/53040594\/swift-sorting-an-enum-by-its-case-names",
              "question_id" : 53040594,
              "tags" : [
                "swift",
                "enums",
                "swift4.2"
              ],
              "view_count" : 38
            },
            {
              "answer_count" : 2,
              "last_edit_date" : 1540796777,
              "owner" : {
                "link" : "https:\/\/stackoverflow.com\/users\/9094981\/israel",
                "profile_image" : "https:\/\/www.gravatar.com\/avatar\/f70c7f1bdcfe385ef2cd4240d360b649?s=128&d=identicon&r=PG&f=1",
                "user_id" : 9094981,
                "display_name" : "Israel",
                "reputation" : 30,
                "user_type" : "registered"
              },
              "link" : "https:\/\/stackoverflow.com\/questions\/53040329\/present-uiviewcontroller-from-parentviewcontroller-in-swift-4",
              "tags" : [
                "ios",
                "swift",
                "xcode",
                "swift4",
                "xlpagertabstrip"
              ],
              "view_count" : 41,
              "creation_date" : 1540796560,
              "is_answered" : false,
              "title" : "Present uiviewcontroller from ParentViewController in Swift 4",
              "last_activity_date" : 1540797832,
              "question_id" : 53040329,
              "score" : 0
            },
            {
              "answer_count" : 0,
              "last_edit_date" : 1540796882,
              "owner" : {
                "accept_rate" : 50,
                "user_type" : "registered",
                "link" : "https:\/\/stackoverflow.com\/users\/770693\/sumeet-mourya",
                "user_id" : 770693,
                "display_name" : "Sumeet Mourya",
                "reputation" : 165,
                "profile_image" : "https:\/\/www.gravatar.com\/avatar\/3ef203773e28a03380f2cfdfdadace55?s=128&d=identicon&r=PG"
              },
              "link" : "https:\/\/stackoverflow.com\/questions\/52989801\/fullscreen-and-volume-buttons-are-hidden-behind-top-bar-in-youtubehelper-in-swi",
              "tags" : [
                "css",
                "swift",
                "youtube",
                "youtube-api"
              ],
              "view_count" : 21,
              "creation_date" : 1540472081,
              "is_answered" : false,
              "title" : "Fullscreen and volume buttons are hidden behind top bar, in youtubehelper in Swift",
              "last_activity_date" : 1540796882,
              "question_id" : 52989801,
              "score" : -1
            },
            {
              "answer_count" : 6,
              "last_edit_date" : 1480764479,
              "owner" : {
                "accept_rate" : 82,
                "user_type" : "registered",
                "link" : "https:\/\/stackoverflow.com\/users\/1173037\/dogcoffee",
                "user_id" : 1173037,
                "display_name" : "DogCoffee",
                "reputation" : 14370,
                "profile_image" : "https:\/\/i.stack.imgur.com\/BbIG3.png?s=128&g=1"
              },
              "link" : "https:\/\/stackoverflow.com\/questions\/32064754\/how-to-use-stringbyaddingpercentencodingwithallowedcharacters-for-a-url-in-swi",
              "tags" : [
                "string",
                "swift",
                "swift2",
                "nscharacterset"
              ],
              "view_count" : 49672,
              "creation_date" : 1439878166,
              "is_answered" : true,
              "title" : "How to use stringByAddingPercentEncodingWithAllowedCharacters() for a URL in Swift 2.0",
              "accepted_answer_id" : 32065975,
              "last_activity_date" : 1540796879,
              "question_id" : 32064754,
              "score" : 54
            }
          ],
          "quota_max" : 300,
          "quota_remaining" : 296
        }
      },
      "id" : "1",
      "request" : {
        "method" : "GET",
        "path" : "https:\/\/api.stackexchange.com\/2.2\/search?order=desc&sort=activity&intitle=swift&site=stackoverflow"
      }
    },
    {
      "response" : {
        "status" : 200,
        "headers" : {
          "Content-Type" : "application\/json; charset=utf-8",
          "Access-Control-Allow-Methods" : "GET, POST",
          "Content-Length" : "2070",
          "X-Content-Type-Options" : "nosniff",
          "Access-Control-Allow-Credentials" : "false",
          "Access-Control-Allow-Origin" : "*",
          "Date" : "Mon, 29 Oct 2018 11:41:50 GMT",
          "Content-Encoding" : "gzip",
          "Cache-Control" : "private"
        },
        "body" : {
          "has_more" : false,
          "items" : [
            {
              "body" : "<p>program code\nhow to add a search for the data of tableview<\/p>\n\n<pre><code>struct jsonstruct:Decodable {\n var name:String\n var Id : Int = 0\n let MobileNumber:String\n let gender:String\n\n\nenum CodingKeys: String, CodingKey {\n    case name = \"name\"\n    case Id = \"Id\"\n    case gender = \"gender\"\n\n\n}\n}\n\nclass ProfileVC: UIViewController, UITableViewDelegate, \nUITableViewDataSource , UISearchBarDelegate{\n\nvar isSearch : Bool = false\nvar arrFilter:[String] = []\n@IBOutlet weak var tblView: UITableView!\nvar arrayData = [AnyObject]()\nvar arrdata = [jsonstruct]()\nvar ListArray : [[String : AnyObject]] = [[String : AnyObject]]()\n@IBOutlet weak var searchBar: UISearchBar!\nlet url = \"......\"\noverride func viewDidLoad() {\n    super.viewDidLoad()\n  postmethod()\n    tblView.reloadData()\n\n\n  func postmethod(){\n\n    let params: [String : String] = [\"Id\" : \"01\"]\n\n\n    Alamofire.upload(\n        multipartFormData: { multipartFormData in\n\n            for (key, value) in params\n            {\n                multipartFormData.append((value.data(using: .utf8))!, \n       withName: key)\n            }\n      },\n        to: url,\n        encodingCompletion: { encodingResult in switch encodingResult {\n        case .success(let upload, _, _):\n            upload.responseJSON { response in\n                print(response.value as Any)\n\n                if let result = response.result.value {\n\n                    if let jsonstruct = result as? NSDictionary {\n\n                        let ListArray = jsonstruct.value(forKey: \"List\") \n                         as! NSArray\n                        let name = ListArray.value(forKey: \"name\") as! \n                         NSArray\n                        let Id = ListArray.value(forKey: \"Id\") as! NSArray\n                       .......\n                       .......\n\n                       if let dict = response.result.value as? [String : \n                   AnyObject], let list = dict[\"List\"] as? [[String : \n                 AnyObject]] {\n                            self.arrayData = list as [AnyObject]\n\n                            DispatchQueue.main.async {\n\n                                self.tblView.reloadData() \n                            }\n                        }\n\n                        for mainarr in self.arrdata{\n\n             print(mainarr.name,\":\",mainarr.Id,\":\",mainarr.gender,\":\".....)\n                            DispatchQueue.main.async {\n                                self.tblView.reloadData()\n                            }\n\n                        }\n                    } \n                }\n   }\n\n        case .failure(_): break\n            }\n    }\n    )\n   }\n\n\n    func tableView(tableView: UITableView, didSelectRowAtIndexPath \n  indexPath: NSIndexPath) {\n\n   }\n  func numberOfSections(in tableView: UITableView) -&gt; Int\n  {\n    return 1\n  }\n\n\n    func tableView(_ tableView: UITableView, numberOfRowsInSection section: \n   Int) -&gt; Int {\n        if(isSearch) {\n            return self.arrFilter.count\n        }\n        return self.arrayData.count;\n   }\n\n   func tableView(_ tableView: UITableView, cellForRowAt indexPath: \n   IndexPath) -&gt; UITableViewCell\n  {\n    let cell = tableView.dequeueReusableCell(withIdentifier: \"Cell\", for: \n   indexPath) as! TableViewCell\n    var jsonDict =  self.arrayData[indexPath.row] as? [String:AnyObject]\n    cell.lblname.text = jsonDict?[\"name\"] as? String\n    cell.lblGender.text = jsonDict?[\"gender\"] as? String\n    cell.lblId.text = jsonDict?[\"Id\"] as? String\n\n\n    return cell\n   }\n\n\n    func configureCell(cell: UITableViewCell, forRowAtIndexPath: \n   NSIndexPath) {\n    if(isSearch){\n        cell.textLabel?.text = arrFilter[forRowAtIndexPath.row]\n    } else {\n        cell.textLabel?.text = arrayData[forRowAtIndexPath.row] as! String;\n    }\n   }\n\n\n  \/\/MARK: UISearchbar delegate\n   func searchBarTextDidBeginEditing(searchBar: UISearchBar) {\n    isSearch = true;\n  }\n\n  func searchBarTextDidEndEditing(searchBar: UISearchBar) {\n    searchBar.resignFirstResponder()\n    isSearch = false;\n  }\n\n   func searchBarCancelButtonClicked(searchBar: UISearchBar) {\n    searchBar.resignFirstResponder()\n    isSearch = false;\n  }\n\n  func searchBarSearchButtonClicked(searchBar: UISearchBar) {\n    searchBar.resignFirstResponder()\n    isSearch = false;\n  }\n\n        self.tblView.reloadData()\n    }\n  }\n<\/code><\/pre>\n\n<p>The data from api is stored and viewed it in tableview. But the data in tableview i want to filter using a search with the name and id ....\nHow it Possible???<\/p>\n\n<p>searchBar\nA UISearchBar object provides the user interface for a search field on a bar, but it’s the application’s responsibility to implement the actions when buttons are tapped. At a minimum, the delegate needs to perform the actual search when text is entered in the text field<\/p>\n",
              "answer_count" : 0,
              "owner" : {
                "link" : "https:\/\/stackoverflow.com\/users\/10092191\/sruthi-c-s",
                "profile_image" : "https:\/\/lh4.googleusercontent.com\/-5w1qgPFKlFk\/AAAAAAAAAAI\/AAAAAAAAAAA\/AAnnY7p579PSjoarkb8lfFl8fbhxPt4p3w\/mo\/photo.jpg?sz=128",
                "user_id" : 10092191,
                "display_name" : "Sruthi C S",
                "reputation" : 1,
                "user_type" : "registered"
              },
              "link" : "https:\/\/stackoverflow.com\/questions\/53044583\/searchbar-in-swift",
              "tags" : [
                "swift",
                "uitableview",
                "searchbar",
                "jsondecoder"
              ],
              "view_count" : 10,
              "creation_date" : 1540812574,
              "is_answered" : false,
              "title" : "searchBar in Swift",
              "last_activity_date" : 1540812574,
              "question_id" : 53044583,
              "score" : 0
            }
          ],
          "quota_max" : 300,
          "quota_remaining" : 295
        }
      },
      "id" : "2",
      "request" : {
        "method" : "GET",
        "path" : "https:\/\/api.stackexchange.com\/2.2\/questions\/53044583?order=desc&sort=activity&site=stackoverflow&filter=!9Z(-wwYGT&"
      }
    },
    {
      "response" : {
        "status" : 200,
        "headers" : {
          "Date" : "Mon, 29 Oct 2018 11:41:57 GMT",
          "Content-Length" : "59",
          "x-cache" : "MISS",
          "x-dns-prefetch-control" : "off",
          "x-served-by" : "cache-bne7723-BNE",
          "Pragma" : "no-cache",
          "Strict-Transport-Security" : "max-age=15552000",
          "x-timer" : "S1540813317.470978,VS0,VE324",
          "Accept-Ranges" : "bytes",
          "Vary" : "Fastly-SSL",
          "Content-Type" : "application\/json",
          "content-security-policy" : "upgrade-insecure-requests",
          "x-cache-hits" : "0",
          "x-frame-options" : "SAMEORIGIN",
          "x-request-guid" : "be2dc4b4-55b4-4215-8bf1-94261b5bd9d5",
          "Via" : "1.1 varnish",
          "Cache-Control" : "no-cache, no-store, must-revalidate"
        },
        "body" : {
          "expires" : 86400,
          "access_token" : "QBKXu5DiOSwt30RL7urljA))"
        }
      },
      "id" : "3",
      "request" : {
        "path" : "https:\/\/stackoverflow.com\/oauth\/access_token\/json",
        "headers" : {
          "Content-Type" : "application\/x-www-form-urlencoded",
          "Content-Length" : "171"
        },
        "method" : "POST"
      }
    },
    {
      "response" : {
        "status" : 200,
        "headers" : {
          "Content-Type" : "application\/json; charset=utf-8",
          "Access-Control-Allow-Methods" : "GET, POST",
          "Content-Length" : "385",
          "X-Content-Type-Options" : "nosniff",
          "Access-Control-Allow-Credentials" : "false",
          "Access-Control-Allow-Origin" : "*",
          "Date" : "Mon, 29 Oct 2018 11:41:58 GMT",
          "Content-Encoding" : "gzip",
          "Cache-Control" : "private"
        },
        "body" : {
          "has_more" : false,
          "items" : [
            {
              "reputation_change_quarter" : 0,
              "reputation_change_day" : 0,
              "user_type" : "registered",
              "last_access_date" : 1540813244,
              "link" : "https:\/\/stackoverflow.com\/users\/2273102\/river2202",
              "badge_counts" : {
                "bronze" : 12,
                "gold" : 0,
                "silver" : 2
              },
              "user_id" : 2273102,
              "website_url" : "",
              "is_employee" : false,
              "reputation_change_week" : 0,
              "reputation" : 396,
              "reputation_change_month" : 0,
              "creation_date" : 1365746605,
              "location" : "Melbourne",
              "profile_image" : "https:\/\/i.stack.imgur.com\/eOJdx.jpg?s=128&g=1",
              "display_name" : "River2202",
              "account_id" : 2626161,
              "reputation_change_year" : 105,
              "last_modified_date" : 1536214617
            }
          ],
          "quota_max" : 10000,
          "quota_remaining" : 9996
        }
      },
      "id" : "4",
      "request" : {
        "method" : "GET",
        "path" : "https:\/\/api.stackexchange.com\/2.2\/me?key=a5rx9FHh4USvbDpX9X1pbQ((&site=stackoverflow&order=desc&sort=reputation&access_token=QBKXu5DiOSwt30RL7urljA))&filter=default"
      }
    },
    {
      "response" : {
        "status" : 200,
        "headers" : {
          "Content-Type" : "application\/json; charset=utf-8",
          "Access-Control-Allow-Methods" : "GET, POST",
          "Content-Length" : "2079",
          "X-Content-Type-Options" : "nosniff",
          "Access-Control-Allow-Credentials" : "false",
          "Access-Control-Allow-Origin" : "*",
          "Date" : "Mon, 29 Oct 2018 11:42:01 GMT",
          "Content-Encoding" : "gzip",
          "Cache-Control" : "private"
        },
        "body" : {
          "has_more" : false,
          "items" : [
            {
              "body" : "<p>program code\nhow to add a search for the data of tableview<\/p>\n\n<pre><code>struct jsonstruct:Decodable {\n var name:String\n var Id : Int = 0\n let MobileNumber:String\n let gender:String\n\n\nenum CodingKeys: String, CodingKey {\n    case name = \"name\"\n    case Id = \"Id\"\n    case gender = \"gender\"\n\n\n}\n}\n\nclass ProfileVC: UIViewController, UITableViewDelegate, \nUITableViewDataSource , UISearchBarDelegate{\n\nvar isSearch : Bool = false\nvar arrFilter:[String] = []\n@IBOutlet weak var tblView: UITableView!\nvar arrayData = [AnyObject]()\nvar arrdata = [jsonstruct]()\nvar ListArray : [[String : AnyObject]] = [[String : AnyObject]]()\n@IBOutlet weak var searchBar: UISearchBar!\nlet url = \"......\"\noverride func viewDidLoad() {\n    super.viewDidLoad()\n  postmethod()\n    tblView.reloadData()\n\n\n  func postmethod(){\n\n    let params: [String : String] = [\"Id\" : \"01\"]\n\n\n    Alamofire.upload(\n        multipartFormData: { multipartFormData in\n\n            for (key, value) in params\n            {\n                multipartFormData.append((value.data(using: .utf8))!, \n       withName: key)\n            }\n      },\n        to: url,\n        encodingCompletion: { encodingResult in switch encodingResult {\n        case .success(let upload, _, _):\n            upload.responseJSON { response in\n                print(response.value as Any)\n\n                if let result = response.result.value {\n\n                    if let jsonstruct = result as? NSDictionary {\n\n                        let ListArray = jsonstruct.value(forKey: \"List\") \n                         as! NSArray\n                        let name = ListArray.value(forKey: \"name\") as! \n                         NSArray\n                        let Id = ListArray.value(forKey: \"Id\") as! NSArray\n                       .......\n                       .......\n\n                       if let dict = response.result.value as? [String : \n                   AnyObject], let list = dict[\"List\"] as? [[String : \n                 AnyObject]] {\n                            self.arrayData = list as [AnyObject]\n\n                            DispatchQueue.main.async {\n\n                                self.tblView.reloadData() \n                            }\n                        }\n\n                        for mainarr in self.arrdata{\n\n             print(mainarr.name,\":\",mainarr.Id,\":\",mainarr.gender,\":\".....)\n                            DispatchQueue.main.async {\n                                self.tblView.reloadData()\n                            }\n\n                        }\n                    } \n                }\n   }\n\n        case .failure(_): break\n            }\n    }\n    )\n   }\n\n\n    func tableView(tableView: UITableView, didSelectRowAtIndexPath \n  indexPath: NSIndexPath) {\n\n   }\n  func numberOfSections(in tableView: UITableView) -&gt; Int\n  {\n    return 1\n  }\n\n\n    func tableView(_ tableView: UITableView, numberOfRowsInSection section: \n   Int) -&gt; Int {\n        if(isSearch) {\n            return self.arrFilter.count\n        }\n        return self.arrayData.count;\n   }\n\n   func tableView(_ tableView: UITableView, cellForRowAt indexPath: \n   IndexPath) -&gt; UITableViewCell\n  {\n    let cell = tableView.dequeueReusableCell(withIdentifier: \"Cell\", for: \n   indexPath) as! TableViewCell\n    var jsonDict =  self.arrayData[indexPath.row] as? [String:AnyObject]\n    cell.lblname.text = jsonDict?[\"name\"] as? String\n    cell.lblGender.text = jsonDict?[\"gender\"] as? String\n    cell.lblId.text = jsonDict?[\"Id\"] as? String\n\n\n    return cell\n   }\n\n\n    func configureCell(cell: UITableViewCell, forRowAtIndexPath: \n   NSIndexPath) {\n    if(isSearch){\n        cell.textLabel?.text = arrFilter[forRowAtIndexPath.row]\n    } else {\n        cell.textLabel?.text = arrayData[forRowAtIndexPath.row] as! String;\n    }\n   }\n\n\n  \/\/MARK: UISearchbar delegate\n   func searchBarTextDidBeginEditing(searchBar: UISearchBar) {\n    isSearch = true;\n  }\n\n  func searchBarTextDidEndEditing(searchBar: UISearchBar) {\n    searchBar.resignFirstResponder()\n    isSearch = false;\n  }\n\n   func searchBarCancelButtonClicked(searchBar: UISearchBar) {\n    searchBar.resignFirstResponder()\n    isSearch = false;\n  }\n\n  func searchBarSearchButtonClicked(searchBar: UISearchBar) {\n    searchBar.resignFirstResponder()\n    isSearch = false;\n  }\n\n        self.tblView.reloadData()\n    }\n  }\n<\/code><\/pre>\n\n<p>The data from api is stored and viewed it in tableview. But the data in tableview i want to filter using a search with the name and id ....\nHow it Possible???<\/p>\n\n<p>searchBar\nA UISearchBar object provides the user interface for a search field on a bar, but it’s the application’s responsibility to implement the actions when buttons are tapped. At a minimum, the delegate needs to perform the actual search when text is entered in the text field<\/p>\n",
              "answer_count" : 0,
              "owner" : {
                "link" : "https:\/\/stackoverflow.com\/users\/10092191\/sruthi-c-s",
                "profile_image" : "https:\/\/lh4.googleusercontent.com\/-5w1qgPFKlFk\/AAAAAAAAAAI\/AAAAAAAAAAA\/AAnnY7p579PSjoarkb8lfFl8fbhxPt4p3w\/mo\/photo.jpg?sz=128",
                "user_id" : 10092191,
                "display_name" : "Sruthi C S",
                "reputation" : 1,
                "user_type" : "registered"
              },
              "link" : "https:\/\/stackoverflow.com\/questions\/53044583\/searchbar-in-swift",
              "tags" : [
                "swift",
                "uitableview",
                "searchbar",
                "jsondecoder"
              ],
              "view_count" : 10,
              "creation_date" : 1540812574,
              "is_answered" : false,
              "title" : "searchBar in Swift",
              "favorited" : false,
              "last_activity_date" : 1540812574,
              "question_id" : 53044583,
              "score" : 0
            }
          ],
          "quota_max" : 10000,
          "quota_remaining" : 9995
        }
      },
      "id" : "5",
      "request" : {
        "method" : "GET",
        "path" : "https:\/\/api.stackexchange.com\/2.2\/questions\/53044583?order=desc&sort=activity&site=stackoverflow&key=a5rx9FHh4USvbDpX9X1pbQ((&access_token=QBKXu5DiOSwt30RL7urljA))&filter=!-*jbN)fQB4uP"
      }
    },
    {
      "response" : {
        "status" : 200,
        "headers" : {
          "Content-Type" : "application\/json; charset=utf-8",
          "Access-Control-Allow-Methods" : "GET, POST",
          "Content-Length" : "909",
          "X-Content-Type-Options" : "nosniff",
          "Access-Control-Allow-Credentials" : "false",
          "Access-Control-Allow-Origin" : "*",
          "Date" : "Mon, 29 Oct 2018 11:42:04 GMT",
          "Content-Encoding" : "gzip",
          "Cache-Control" : "private"
        },
        "body" : {
          "has_more" : false,
          "items" : [
            {
              "body" : "<p><img src=\"https:\/\/i.stack.imgur.com\/76qtQ.png\" alt=\"enter image description here\"><\/p>\n\n<p>Authorization Header Will be Pass in postman it working properly, in code it will be not working it will be give a error - \"Authentication credentials were not provided.\"<\/p>\n\n<p>For building web api using \"django-rest-framework\".<\/p>\n\n<p>code <\/p>\n\n<pre><code>func apicall()\n{\n\n    let url = \"https:\/\/ballerprofile.herokuapp.com\/api\/auth\/user\"\n\n    let headers: HTTPHeaders = [\n        \"Authorization\": \"Token 9d668922cef3eeb304b7a2f5a96c8b6d00f0f961\"\n    ]\n\n\n    Alamofire.request(url, method: .get, headers: headers).responseJSON { (response:DataResponse&lt;Any&gt;) in\n\n        switch(response.result) {\n        case .success(_):\n            break\n        case .failure(_):\n            break\n        }\n    }\n}\n<\/code><\/pre>\n",
              "answer_count" : 0,
              "last_edit_date" : 1540812454,
              "owner" : {
                "link" : "https:\/\/stackoverflow.com\/users\/10574113\/jappy",
                "profile_image" : "https:\/\/www.gravatar.com\/avatar\/eb3ff021db74b7d15eb3c6ca3b939979?s=128&d=identicon&r=PG&f=1",
                "user_id" : 10574113,
                "display_name" : "jappy",
                "reputation" : 1,
                "user_type" : "registered"
              },
              "link" : "https:\/\/stackoverflow.com\/questions\/53043063\/api-working-in-postman-not-working-in-react-native-and-nativeswift",
              "tags" : [
                "swift",
                "react-native",
                "alamofire",
                "urlrequest"
              ],
              "view_count" : 26,
              "creation_date" : 1540807503,
              "is_answered" : false,
              "title" : "Api working in Postman not working in React-native and Native(Swift)",
              "favorited" : false,
              "last_activity_date" : 1540812454,
              "question_id" : 53043063,
              "score" : 0
            }
          ],
          "quota_max" : 10000,
          "quota_remaining" : 9994
        }
      },
      "id" : "6",
      "request" : {
        "method" : "GET",
        "path" : "https:\/\/api.stackexchange.com\/2.2\/questions\/53043063?order=desc&sort=activity&site=stackoverflow&key=a5rx9FHh4USvbDpX9X1pbQ((&access_token=QBKXu5DiOSwt30RL7urljA))&filter=!-*jbN)fQB4uP"
      }
    },
    {
      "response" : {
        "status" : 200,
        "headers" : {
          "Content-Length" : "47247",
          "cf-ray" : "47156074e8991d5c-MEL",
          "Etag" : "\"8321550bd78430c26fda1f07e199c8db\"",
          "cf-cache-status" : "MISS",
          "x-amz-version-id" : "syHGfyoZK.xDNFa7LBIkjL7acWlGrg2W",
          "Last-Modified" : "Mon, 29 Oct 2018 10:02:32 GMT",
          "Vary" : "Accept-Encoding",
          "expect-ct" : "max-age=604800, report-uri=\"https:\/\/report-uri.cloudflare.com\/cdn-cgi\/beacon\/expect-ct\"",
          "Content-Type" : "image\/png",
          "Set-Cookie" : "__cfduid=ddd26060f806c4ce4d78be3cf21ed44441540813325; expires=Tue, 29-Oct-19 11:42:05 GMT; path=\/; domain=.imgur.com; HttpOnly",
          "Expires" : "Thu, 26 Oct 2028 11:42:06 GMT",
          "Server" : "cloudflare",
          "Cache-Control" : "public, max-age=315360000",
          "Date" : "Mon, 29 Oct 2018 11:42:06 GMT"
        },
        "data" : "iVBORw0KGgoAAAANSUhEUgAAA8MAAAExCAYAAABYsHANAAABfGlDQ1BJQ0MgUHJvZmlsZQAAKJFjYGAqSSwoyGFhYGDIzSspCnJ3UoiIjFJgv8PAzcDDIMRgxSCemFxc4BgQ4MOAE3y7xsAIoi\/rgsxK8\/x506a1fP4WNq+ZclYlOrj1gQF3SmpxMgMDIweQnZxSnJwLZOcA2TrJBUUlQPYMIFu3vKQAxD4BZIsUAR0IZN8BsdMh7A8gdhKYzcQCVhMS5AxkSwDZAkkQtgaInQ5hW4DYyRmJKUC2B8guiBvAgNPDRcHcwFLXkYC7SQa5OaUwO0ChxZOaFxoMcgcQyzB4MLgwKDCYMxgwWDLoMjiWpFaUgBQ65xdUFmWmZ5QoOAJDNlXBOT+3oLQktUhHwTMvWU9HwcjA0ACkDhRnEKM\/B4FNZxQ7jxDLX8jAYKnMwMDcgxBLmsbAsH0PA4PEKYSYyjwGBn5rBoZt5woSixLhDmf8xkKIX5xmbARh8zgxMLDe+\/\/\/sxoDA\/skBoa\/E\/\/\/\/73o\/\/+\/i4H2A+PsQA4AJHdp4IxrEg8AAAGdaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJYTVAgQ29yZSA1LjQuMCI+CiAgIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgICAgIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICAgICAgICAgIHhtbG5zOmV4aWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vZXhpZi8xLjAvIj4KICAgICAgICAgPGV4aWY6UGl4ZWxYRGltZW5zaW9uPjk2MzwvZXhpZjpQaXhlbFhEaW1lbnNpb24+CiAgICAgICAgIDxleGlmOlBpeGVsWURpbWVuc2lvbj4zMDU8L2V4aWY6UGl4ZWxZRGltZW5zaW9uPgogICAgICA8L3JkZjpEZXNjcmlwdGlvbj4KICAgPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KaXrG7AAAQABJREFUeAHsnQWcVcUXx882u8vSKSChlCChYICEmICggon1FxNRTLARMTDAFgMTFRNEBAMlDEoMQAlBBUWQrg3Yevuf7yzzuLx9bwN22WX3nM\/n1Y25M99779z5zTkzLyw1NTVL1JSAElACSkAJKAEloASUgBJQAkpACZRSAtHR0f6SrVy50n6P5H3btm2SuCNR0jPS\/RvoFyWgBJSAElACSkAJKAEloASKh0BUZJQkVEiQSpUq5TsDW3Zmyc0Td8n0ZemybZf6uwBXfsdSSarQPN8MC2PDPm2i5cmzykmV2LB8Jefz+WTTpk2SkpIifD8YLSsrS8LC8lfewipffHy8VK9eXcLDw\/c5yUiEcFRUlFSpWmWfE9EdSw6B9evXS82aNUtOhjQnSkAJKAEloASUQJkloO2SfT\/16enpkpycbBPIryDu\/16KTFuWse8H1T0LhcCEBWlCV8TYC2Pzld7GjRslIyNDKleuLJGR1leZr\/1K0kZr\/l0jderWOWBZ8mVmyo7ERIHd\/mifcDzCakpACSgBJaAElIASUAJKQAmUHAI4q\/B8FaStrkK45Jy\/GcY7n1+j06NCQsJBK4TzW87C3C48IkLKly9vven7k264hkbvDz7dVwkoASWgBJSAElACSkAJFA0BBLG21YuGbVGnWtAwdcSdWsEI4EUnPHt\/bN8DrPfnqLqvElACSkAJKAEloASUgBJQAkpACSiBYiSgYrgY4euhlYASUAJKQAkoASWgBJSAElACSqB4CKgYLh7uelQloASUgBJQAkpACSgBJaAElIASKEYCKoaLEb4eWgkoASWgBJSAElACSkAJKAEloASKh4CK4eLhrkdVAkpACSgBJaAElIASUAJKQAkogWIkoGK4GOHroZWAElACSkAJKAEloASUgBJQAkqgeAioGC4e7npUJaAElIASUAJKQAkoASWgBJSAEihGAiqGixG+HloJKAEloASUgBJQAkpACSgBJaAEioeAiuHi4a5HVQJKQAkoASWgBJSAElACSkAJKIFiJKBiuBjh66GVgBJQAkpACSgBJaAElIASUAJKoHgIqBguHu4l5qjp6eny5Zdfyq5du0pMngIzsq959O7n\/R6YfnH8XrJkibzxxhsybdo0SUxMFPKHfffdd7Lm3zUFytK+7FOgA+zeeOnSpbLgl1\/2ZVfdZzeBHTt2+M91UUEpadd6UZVT01UCSkAJKAEloASUwP4SKJFiGGFGA3\/SpEn29c0338i6dev8Zf37779l9qzZ8sMPP\/hf\/F6\/fr0sXLBQ5s2b51\/u3ebnn3\/2p6FfsgmkpqbK66+\/LinJKUGRJCUlydatW\/3raGh7z4V\/xX5+8WVmytVXX72X2Jr1\/Sy5\/vrrZefOnbnmMdShvWXzfg+1\/YFa\/tdff8nw4cMlJSVF\/vvvP7nl5lvkpZdekixflowbN064vvNr+7JPftMO3O7HH3+UGTNnBi4uM7+pX\/r16yfbt2\/fpzJzrgYPHizff\/\/9Xvs\/88wz9vrea2EBf9CBQvpYfq\/1wjhuAbOpmysBJaAElMBBRCAhWuSViyvI14MqyZfXV5Lnzk+QE5uahUVo02+sJLueqC7\/6xBbhEc5uJNeu2atfPH5F1Yj4VQpSLvx4C550eQ+smiS3fdUp0+fbsVsYApz5syR\/v37S40aNYRG+fLlywM3kfSMdPnpp59sYzDHSrMgPDxcWrVqJZGR+Ss2oqVevXoSFRUVLDm7DHG4evVqadSoUchtSvKKiPAIiY6OluiY4JXbBx98IM2aNpMOHTvYYixbtky++OIL26gvzHIt+\/13K3qbmmNhNOw\/Gv+RnHzyyRIVGZVrHkPlw5WN9d7vobY\/UMsXL14sTZs2leuuu84esnPnzlI+vrz9Xq5cOYmMyt\/16fLLPuViy7mfRfbJfcC1UlZtxowZUr9+famQUGGfEISFh8ntt98u1apV8+9PZ9P8+fNl2LBh\/mUF\/bIzZafcO\/ReeWXMGAmTCP+1HuqeJv3COG5B86nbKwEloAQKgwB13oDrBvgj2mjbXXHFFXLSSScVRvKaxm4CnRpHy2dXV5RoT5Ok62FRckHbcnLkw1vkvx2ZRcoqc3cHb5EeJCDxDtXXyb\/J5eWflOw2WcBqOTQuSerGJ8nsjbUCVx2w31OnTrVax3tAHH\/dTz9d2rRt611cYr\/jCCpfvrwkJCTkyCPRkrRRateunWNdUS3wXOJFdYj8p\/vtt9\/6hXDNmjWlc6fOdufFSxZb7yRCGHNitnHjxnL4YYdJps8nmcaz2KBBA6lUsZIkJyfLrtRdNi227dSpk2RlZdmGvNvXJpTLG0J45cqVsnHjRjnqqKOCCmKEMN5mThp2sApiHiRvvfWW9cb7DMuOHTvKgAEDZObMmcJNx3l59rln7cPmlVdekbCwMOsh6927txxzzDHy6quv2gY+HnnSYl+YY5MnT5a3337bfmfd\/cPul9qH1LYe35tuvNF\/437++edy3HHHSWxcdk\/gho0brKffXQPsO3bsWJsXEuvZs6dcZLx04RERQsjxCy+8YM8V2w28bqB0PKGjPWaoN3rVhj8wXLZt2yaVK1eWO++8Uw499FDhvMMCsTpx4kT7cOUBG6qMPJRJp0vnLvLOuHekYsWK8tRTT9m8PProo9aL7mWCt\/udd96xDC+88EK56667rKeww\/EdbD68+SVCgrQWLFhguV4\/8Hp\/p4R3O8TwV199JS+++KIQhnvIIYfY8lSvXt12KoyfMF4++ugju4vjFhYWLiNHjZTmzZsL7PH+P\/fscxIXHyejR4+2kRXs4LaHs9fY\/tZbbxXKcJi5B1977TUZfv\/99nyQbzygnOsqVavI5599JuPHT5Ck5CQr+ofeN9TPOhRXOkOeefYZiY+Pt3xIs0mTJjJkyBBbgXrzwnc6yJ5++mkbgoxof\/755yWhfIJ4y37kkUfKjeaaowLmPI8x4pFzzz1MvYBQ5ZqfNWuW5c22xx57rD0UkQvTvp4mV1x5hSBqQ11zXA\/D7h9m88o5wbp37y6XXHyxOefh8vHHH8vJJ50srdu0tuuIZIkwbBHZ1CdwJBKG+5BrkOsyJjpGHnn0EenRvYd\/P4Y2EKEB\/0GDBtkogyuvuso+PNiHay7YPe3qP+9xYRHq\/CVUSLBRC86bXatWLXnwwQctQ5g\/8cQTNq+w5XrgWqS3et36dbJ582Yr9Fnevn17W159UwJKQAkUBgHafEOHDpWqVavK7NmzbX1etUoVf5uiMI5R1tO4pVusFcJJaSLPfbdTYqPDpHeLaPltfUaRCOFmNSNlmUk701c85KvH7JKBTX6XxIwIefjXNjkEMUL4riMXSEJkpqzYUUk2pha9EyKQBJFfCxcutIvbtG4tzUwb7o8\/\/rAOQr4fLPbPP\/9YB9jRRx+9lyBGCOPUjI2NLZtimMYmPRsYjcA+ffr4z+nhjQ\/3f\/d+QfwG9oI4wcwFQ2ONhvExpiEW2Jj3phPsOx5hhDBCl8ZyoCD2CmEa12x\/MNvvxjP78MMPS0Z6htw\/\/H7rQacBi2e4V69etjFLDw5eTcKW6YWlYb1hwwb5888\/bUfE6OdHy+w5s60QQVjiRUQI33XnXXJInUPsDVypciXruaKxHmXWYwgIBN+wYcPsb94QJAgExApCCCMMZNTIUbJ121ZBaHKuTzvtNLuuZ4+eVpjPmj1LXnzpRXu+7Iogb2lpaXLPvfdYwX7WWWdZ0XvPPfdYwct5ZWwsYu9+I+4qVKhgBWaoMtaoXsOGOo99a6zcdtttUsU8jNPT0q2IadeunQy9d6gsWLjAMmEdIoiOAq6r\/\/3vf1LdeAkJU6dC8Bpi8Mknn7RiHZFHJATisE7dOpaLd1s4UzkigmAycuRIy\/3mm2+WadOn2fI9MPwBK8A5t2xz6imn2jxwfi655BJp1qyZVKhYwXJdu3at5ZyYlCiPPPKIxMTEyHnnnWcPyf3EvYrAQQAh7JYuWyr\/\/vuv+EyHE+MuyLs3tB4ReM2118jhhx8uL7\/8suU87L5hVvyF4npovUNl06ZNVkwhUitVqmTE9nDbOcC58hpijjIjDOmcgRUV6RdffC4TJkyQu+++25aZjoWHHnpIHjJijvNMZxcCm44UOj5Yd\/zxxwvXMdEPzz33nLQ6spXtoFlhHjZ0sLVulS1iOX6oa45waoxrdaPp1Hns8ccFEQlzOKWmpdr1cEKs06nEvcRvBPwDDzxgOwHoKKEzqtcZvex95vZjZ\/hyDXHuL+x3obxhxp9zjokqIAoCC3ZPd+nSxd9B4o7L\/RXq\/CGC6eTiGqRu+PXXX63g5UEG82uuucZ2qIwaNcr+vvuuuyVlZ4rlx3VOneL1hNuM6ZsSUAJKYD8J0Clfp04d2wF91pln2c78FNOWwHLrgA3s7O7bp688\/czTtr5kXzovL73kUr7KU08\/Zes76kDqSeo0nhE8m3mGeDsBFy1cJE88+YS\/vcJzlc7kg9mqx2c\/Syb+lir3Tc52+gyZsHeJRp2TIFcdW05idrvWfvw3U84Zs92K5Q+vqijdm0XLlKVpcrLxMpc3TT7TTJDpf6RLj9Hb\/AlNuraSnNokyrRRRNYlZkl6MYlhxO3zy5taQYzo9QpirxBmm+IQwgCj\/U1nOe0y2r9om4YNG8opp5zi58n1+ouZ38W1w2gPdTuxm7Rq3cq2v7Zs2SJ9+\/b1O\/BwDr373ru23cRwxcW\/LZavvv7KXuMkSjvpbNNWLqiO8mcoyBc0FdoK4esEsVcIs\/5AWokZM7zRNHwzMjKsRyO\/FQgndMvmLdZDEjiOlYrKGY30ghqNfk4GQtcJYpcmn5xElrM+UCgX9FjFvT09rNdee60VtHQ8IIJ\/++03Gw5K+fDS05jHS0fYAqIYryNCFaMhf+mll1ovIAIBzyQeUDxa2O\/Lf7f74GFlP7y\/eKJatGhh18PSecdYgNj6\/LPP5cwzz7ReOJaRx8svv9yKwZYtW8rZZ59thQLbHnHEEX5RzMOJKAAqjFCGCOLBRn4QIF27drU3PdcThlBHCNMp48I0QpXRHQMhzHXQwHTQrFy10lZWCAU8o926dZMOHTrITON1hCcMHFeEIvkNNPKH95FyEibe4ogWVigFm1wLcQ8rys65omGAOOY6\/cx4ZSlnzVo1pUbNGoJAJ12M\/VjH\/YZ3l2MSBk\/nBaIbgXzVlVfZNNy9CaMhRpxyrBuNRxIvKecOC+dJtttg6Oz07qfbzhV+w4FOjUxfdnhVblw5Jh0xHIvOJrzC5A\/vt9foRONcwYDzheCLjIiUqcYze9lll\/m5DL5tsD32tm3ZY365xxkDzHXMPuSZDgrOWe8ze+91HeGJRWi7yIXcrjnvtUpnHR0uiFpXZpd3oh8IFSISA4Nlv4v62XOIh5VGF0Mw8rJ6devZvNeuXcvuy\/ah7mnWBR43t\/NHpAPnYdWqVfa+5lxyzubOnWtZc82TVxqQ9E67MiKAB5g6hWgZOpTUlIASUAKFTcDVXQyRI8rLDTFyHbB0dDZu0tgKAJ71PBPp7Kb+4hl\/xhln2HqXCCk6\/Og4JVLqr5V\/2azS2Y\/XmQ7ZBx940HbO0gnIs4iO4hUrVtjnI+2QZ5991tb1RGjRWUxb4GC33zdm2CKc3yZGXuiXsx5\/+Kzycn3HchJtmgDLN\/okxXiQ29WNkEkDKtr9qsaFSZRpCpxlvMm0CNbuyLKC96TGUfLI2dnhsa9eUkFOa5othFdvz5LKsWFSr+KetsSBZkj4M2IX7y+CGBEcKISLM0S6gml\/8wzG4fe2iTLkug802hUIYdqaOD9oD3\/2+Wd2sta6devaZ7pzPrLv\/B\/n2\/Yg7SecCWzLc59teb6z7IMPPww8zH79dhoLoY4gRpA7j3BxaKrdfTn7VaZC2Xn9uvW28Ukjih4PDG8NlRFG4w5RQaPXGeB4OUMsIdoKy9zJcsKXz9YmLAGhUVqEMKzoYXWij98wxCuOBQo1eqS8xnmJi4szgm3PpcQNiPcWUYGword0\/PjxwthYPMru\/Nr0zQNq8pTJfu8Yy4J54QLz6Dy2hMi\/acKnEStsg\/c1MI\/e\/LrvbMMDzRn74omkksHblmBEq7Pcysg2pNWgfgO3uRWHCCvSdEalQgWF5Sd\/bMeDHm+m19asXeP9ab8jYukZdEblh3F8Oi5gw8sZ9xCihf24np05j6J3rKlLC6ELGzz4WI8ePfLVS8gxXKg3lSoilY4A0suLK\/syFMJZTLkYyw4PZaDRARNotvzl94xHodKlDM7Ij7tuaSSxjmsZg4UT9EQuMK6XhhJGo+qNN98Iec1xXO\/9hKBEwAfeS0Q\/NDANJqILsMDQfSbqOvHEE+263N58WXvfk2wbmAfvPR143NzSbtumrVx00UXWE0Kalxpvx+mnd7esuJ7p8HHGuHcmhaOThcZlYfYiu2PopxJQAkoAAtTPDHXB8IQRVXNkyyPtbzrtEAvUR3TAMhzHddSxH0KYetnZBRdcYEUFz2mW0\/5p1LCRXU2HLPUZ9T6eaCLW6KDFaNO453p4RLj1LjO0q7QMC3l6eop0OzxaDqkQJv3bx8glR1e3Xt7zX9kuTKzV76jsMOEX5+ySmz5MlIZVI+TXu6pIs2oR0vbQKMuIN0Ru24c3SaIRy\/OGmFD22hFSvbxpn5g08Bhj4xelSb\/Xt0vtChGy8M7KUiFmT\/vJbnAA35zYJWQaQYwhjhHJbt0BzM5eh+K52rVrV9vBvmbNGhvZxvP9zN5n2jY3G9MBz8sZQ99og3A\/tG\/X3nqN6WjnHqENRIQez\/dj2h9j2+Ps190854lkRBQTCeG297bfXfr7+unVWEQY0jYsDiFM\/ve0DPe1NIW8Hw0pZ4RremdudS5\/t54LgMop05wsrGKFPZWb22Z\/P70nCwFMQxIrzpO2v2UKtn9mxp6JELxizXs+2I8bw2sINnqd0s3yGPMdgxPnBiMs44033rAePXpSedgQnumMc4rX6aabbnKL7E3ODeG8cKxASPDQcQ8wwikQM0QEIPQIccW7SS+Zm5jKn2DAF0QYgpcHJOfXa4SWBlpeZQzcnvRh6BU\/dOp4uQbuE\/ibBzfsCbXFS1sQ84ojKkA6iVw4uUuHB3ugcUyXd7eOUGmM6ArOPd78E044wYY7w5uGgePp9qFR4AzPNJ5oxppzz9ChRG89lhdXzi\/eRq4FzF17rvffLty9PFjvKBX9zl17IgQIM0b0OvN+ZxmVfIRpKAWai1wgzBvjOsztmgu8VnkAURYeNs7wJBCKjdDEI8z5eH7087ZTY7CJMuCBh4fBe\/95hbwT6qQH\/2AW7J4OPK7bn\/vBmff8kTe8J0R8zJg5w573piZigHwRoREYsu7S0E8loASUQFEToN7iuUL7wQ2Hy60DlvwEdnbzzyU8k3g+M\/6YNifPJoy0GpgOS2e0dXjuOePYLKO+ZngLw0WuG3idfS7ecsst\/kgdt\/3B9rloTYY0vG+TjDGzSfcw4c7V4sOsl3fO4Cpy6tNbrNeXMg3oUM6+CG\/GE5xlHnVt6u2RF6u2ZFghzLY\/\/J1uxTDfsUi2N82RCYuyhw8xKdfKrT5pXSv7HGRvdeDfnehFEGMlQQg7CoQVN2zQ0A6DQ8jSDn55zMv+SYaJ7GTSYdrXrn1A+4MXTiqcjnT40L7CAUBbibY1bU3XzsI7zIt7gTTYl\/Rc297lZX8\/ncYiygLnR2CbfH\/Tz+\/+OVt++d2zkLdDJAEbkUMFhCFqGAdJSGIwo3fu1FNPle7GS8XLK56Cbb+vy9zJouLD+Cyu3ot9LcO+7EdDGC8iIZ40ommwcwPSC4vgdWKCTyYLYv1PP\/9ke5kI8eShgpDAs9a0SXbIcVJi9n78tRBjPWd+M9OGXzJ2FmNbvP2EXXqNG5LwJW5aPLiffvqp9ZpxbHeT8\/3DfIRyMJ4ZwcLfGHE8ysJYSMoYykKVMdj2dNCQ\/pQpUywTBDaTkBWktzg+Lt4+UBn\/zFAA7gnGazvujl+w47tleF+ZAIpxwbCmDHy6nmy3nfvkmIRZM64XzghMBBn5RojRWMDzjreSyc7uvfdemybnhnytMuHPXANMEuUq1FgjAp2RHuOjvT2LuXGl0cJkUlTalJ99Ed94AAjDtw0Yc87wbjM+huvGlTEtPc2O73rzzTftRGwshwP3LmOjA43Knm0CjY4FHgh4wp0YZexwbtec91pl\/PAnn3ximTnPO8cg+gGR7B0r7tJnPQ84Ot6cSOV4\/OYaJVSeTga3jgYcfFaaTqVgZSA9Z8GOm9v543ohLxmZGbbOQ9STb+peHrg0JDkm5VyxfIU7jH4qASWgBIqUAM8jhsHw4nnkIlG8HbB0xCNOeZ4FM+ouniuMEX7vvffsJJJEnXk7sr37sdw7+623g5soKuYyIdyazkq8cTwPS4Nd9fYOqXPPJhn7U6oVrnh+G1TziF0jXhety5TfN2TKb+bz1\/WZ8of57mzFpj3RS4mpezPZ+1f2Hsmpe7Z3aRTHJ4IYEVyShLDjgKg999xzzXC1G20nDtcmbU2e2bSPaSfXrVPXRkY47eL2xQOM0W5y0X7O6eC2oS3IMCfay0QeNjCdQkXhcOR4aCx0XnEJYfKw52rmVzEa4\/YYk0qjmplv+5nJcFzlRmOtuM0J4uLuvTgQHKjIXUMbL+Bjjz1mxjJeZMfB2PBHs\/7KK6+0400JE8IQqogN7JxzzrHjTZlkh32d0aPUo2cP+2Bi7CciBxFNiJI713\/8+Yfd3Nv7ygIa4TT4efBheKXwMCMwEENMNuSWu7zbBUHeqBiY2Oqhhx+y+WYTwmxHmomOsFA3ZLAyIqYDjR42OnFGjBhhH7Csh8mxxxxrNw3MH2VzhujB6IggDUQvD3MMscQDlgc7\/Kjs6Jxw+9iNdr+5Y5x\/3vl2Vl\/Hh9V33nGn1KpZK8d+HHPYsGGWpZczEypgXm8kHVUDBw60YWoDrh1gBbM7Bh5U58E\/znSKfGjuZ64XjE4SrguvBeNKIwLvI6L6hhtusJsThjvikRGWDWO66JS5xuQNYcbkWY\/vPn\/kk5mxKTvCn1mhMfbnnDvR6T3PjMv2\/rY7mDc65xjjzIzNzmCe1zVHtIOXoYuGcOeK8ToIYfeQgj3XCNcM9xplcKF4rIPfg2biLwQx69jXnQ86kniQEMZNjy8RGIHGtlwTgcdluyaNm4Q8f7+b64xhCM44f0fsDoFmyAOzdvPCevfqbcfnuXy5ffRTCSgBJVAUBNJSTSThnhFN9hB5dcB688GQGwQtdSzPHKJfiKZy9bR329y+I6rpjKUeRkQwN8fMmTONcDRpS\/G3X3PLe27r+h1TTpYacfvLP9kdxePm75KL2sb4d3FCdrzx6t41MXuCLf9K+yV72BFjinMzmj1Hm7Dqj37aZUOnm1YvMdKk2MOig3Gj85nrDMMJyHf+vSHczEGzaNEiu5x2GGIZc8vsD\/PWsmULM6fKVP+cJDyz27RpY1e7ax9HipvXx+1Xmj\/DzGQCWQ5qcReUcEq8KBgNt0NqH2L\/O5gTT6PYeaTYhm0REc7LxHr+3sb9ZQmimkYa66+\/\/np\/A7i4y1jUx\/feJIV1LNgyQ7LX8w5fPInE+TMm9EUTZkSoNObOiTs+IpYHjXd\/vMb8XysPoYIYQpAHjxMRbl\/yg8jxCku3LrdP8oblth\/XWl5lDHUM8gWPYEIr1D6By4PlsaD84EbPIZOa5Yd5sHMWmK\/A3xzDZ\/4TwXue3TbBOOTGlevllltvsTNd02NJfrzniGuAhoz3WFynbMd16S1jqGvG5W1fP4Ndc3SOMHM2nRbklzx5853XsUKVwe3HMQPL5123P9daqPPn8sQ1HHhvs44XHZb7c427MuinElACpY9AYbdLqGf5n+EnRj3hHyfpqBHKyQRWRLBgrgP2cdMxT2QME2C9ZCKeXAc885m4iDK8u9RlTKzY7uh2cuttt9rOeiZP5JnEv1AwUSO\/Mf5tg2cxM0fTQeyOibhgCEmoqEa7cwHfYJjfv+9MuD17ksgCHiLH5nNNOHTbQyLsDM8p6WbMdIVwO2v0v2YirDYPbZJR51aQy9pli+Ml632yfVeWNK4WLhuTzfoRm2X6jZWkY4MoefvnVLnireyJL5l069Yusf5ln5iZpE83E2iZ5oksNMKbY1Q34dj8vuqDRHlrbnYbLUfmCrig\/I6lklSheP56KPHR\/A3hxKublx5zEXs8i3Ei0hbCMYLxrx9cjwzjYj1OJcYVswyR279\/fzuhFts6HcV3PL84pTA6zKdNm2a\/1z+0vv27TdLAwXGx+YvIvIzItYIO7csrzfysL8j94ZxFpMuEuljJ6X4xmaHiIH4dFz+NvlV\/ryKP1ghNcbMXO88DDV9ezrzjAznxbju3Xj\/3jQAi03nTXApeMYoHjzGlgQ1lt20wMeA8h26b\/H5yjGDH8eYnv2mxXbC8Bds\/rzIG24dl+5ovb3rB8lhQfsGYeY8R+D3YMQO3Cfyd2zFCcciLK0ILC8wPwitQfHGNBjtOqGsmMP8F\/R3sWC4NPBasD7xv3PpQn6HK4LbP7Zi5rXP75\/YZ6vzllifWFbSMueVB1ykBJaAE8iJAJ+gbJgQ6mNFO5N8qgnXAMuzLTbrl9uUvZpgXIVhHLv+j7owOVuYm8Zr7y0GWcUzaozyz9rcu9h6jOL+v3pZpxXCtBJwW2Y6Lv7b45KYJSXYM8NXv7DDiuIKc1zpGjqi5Z9TlonXZz+1du0ceIWwDzS27+LVtMv3mKtLKjBFmYq2dZh9Cro+smYc7OTDBMvKbiUB50fHihrzx7KbTB\/FLRxFRc4hmHA6s47pnRmiv0aHDzOqYdwgfy3F+fff9d\/L3P3\/7d2lkBHNpthIlhgHdoEEDGxbpZl+Njorey\/vDNszuxys3I+R68ODBuW2i6wqBACKF0Ezv3+oUQrIlKomyUMbiAJ4XV3rpo43oPdjMO6bsYMu75lcJKAElUBoIFESQhuoILCiHwE7bgu5f0rY\/1\/xfMHZGqxjZvjNLtqeYscFmUi2vXfbmDrnMs82Cv9P8k2V5\/0vY7UM4tTekmhmm2z+6RY4\/LEqqxofLN8tS\/fu7ffRzDwGuVYZ+0fHCXCd0vnidI3QUDRgwwIb7M\/zLGz23JxWx\/3hxxx13eBf5v3c8oaPwQlATTRgqDf8OpeBLiQqTLgU8i70IhR2OVOwF0gwoASWgBJSAElACBy0BbZfs\/6krSBhoYYVJ73+uS04KpSVMuuQQDZ6TgzVMek9cQ\/By6VIloASUgBJQAkpACSgBJaAElIASUAKljoCK4VJ3SrVASkAJKAEloASUgBJQAkpACSgBJZAXARXDeRHS9UpACSgBJaAElIASUAJKQAkoASVQ6gioGC51p1QLpASUgBJQAkpACSgBJaAElIASUAJ5EVAxnBchXa8ElIASUAJKQAkoASWgBJSAElACpY6AiuFSd0q1QEpACSgBJaAElIASUAJKQAkoASWQFwEVw3kR0vVKQAkoASWgBJSAElACSkAJKAElUOoIqBgudadUC6QElIASUAJKQAkoASWgBJSAElACeRFQMZwXIV2vBJSAElACSkAJKAEloASUgBJQAqWOQHhERESpK5QWSAkoASWgBJSAElACSkAJHOwE0tPTJSoy6mAvRpnMf8WYsAKV25eZWaDtdWORjIwMCQsrGOdAbuEVK1YMXKa\/lYASUAJKQAkoASWgBJSAEihGAgjh5ORkSaiQkO9cnNQsMt\/b6oZFS6Bb8\/x3YsTHx8uOxEQr7oo2V6UndToPkpKSJC4ubr8KFZaampq1bds2SdyRKOkZ6fuVmO6sBJSAElACSkAJKAEloASUwP4TIHoTp1WlSpXyndiWnVnS\/70U+XFlpmxPzcr3fqV5w\/I7lkpSheYHtIhnt4mWp84qJ1Vi8+e19Pl8snHjRtm5c6fw\/WC0rKys\/fbSFrTcdCJUr15dwsPzN\/I3Ojraf4iVK1fa71YM+5fqFyWgBJSAElACSkAJKAEloASUgBJQAqWMQDAxnD8ZXcpAaHGUgBJQAkpACSgBJaAElIASUAJKoGwTUDFcts+\/ll4JKAEloASUgBJQAkpACSgBJVAmCagYLpOnXQutBJSAElACSkAJKAEloASUgBIo2wRUDJft86+lVwJKQAkoASWgBJSAElACSkAJlEkCKobL5GnXQisBJaAElIASUAJKQAkoASWgBMo2ARXDZfv8a+mVgBJQAkpACSgBJaAElIASUAJlkoCK4TJ52rXQSkAJKAEloASUgBJQAkpACSiBsk1AxXDZPv9aeiWgBJSAElACSkAJKAEloASUQJkkoGK4TJ52LbQSUAJKQAkoASWgBJSAElACSqBsE1AxXLbPv5ZeCSgBJaAElIASUAJKQAkoASVQJgmoGC6Tp10LrQSUgBJQAkpACSgBJaAElIASKNsEVAyX7fOvpVcCSkAJKAEloASUgBJQAkpACZRJAiqGy+Rp10IrASWgBJSAElACSkAJKAEloATKNgEVw2X7\/GvplYASUAJKQAkoASWgBJSAElACZZKAiuEyedq10EpACSgBJaAElIASUAJKQAkogbJNQMVw2T7\/WnoloASUgBJQAkpACSgBJaAElECZJKBiuEyedi20ElACSkAJKAEloASUgBJQAkqgbBNQMVy2z7+WXgkoASWgBJSAElACSkAJKAElUCYJHBAxPH\/+fPn7778LBXBGeoZs3ry5UNIika1bt0pqamqhpVdaE1qyZInMnjW7tBavxJZr\/fr1sn379hKbP81YcAKcs5SUlOAr81jKfkmJSXlspauVgBJQAkpACSgBJaAE9pdAZG4JZGVlyQcffCDVq1eXbt265bbpXuvWrl0rVapUkXLlyglp\/PXXXxIWFib169ffa7t9+bF02VL57bff5NxzzpXIqFyzHzT5wLxNnTrV5uu4444Lun1JXgjbAQMGyCUXXywdTzjBn9XFixfLfffdZ89deHjh9Hd8++23sm7dOunQsYP\/OEXx5Ze1PjlhVJJ8d0t5OapOuOxMFzn5uRTZmJglS+6Jl0hTnM+XZcp5ryTLsnsTpE7FsKLIxn6lScdPZmamPw3OQaVKlezLvzCfX5ygqlixYj73OHCbcU38+++\/\/gPGx8dLxw4dpVr1av5lpfEL5\/fQQw+1dVpg+RYuWChLli6x9R7rqPe6d+9eoHP\/\/Xffy67UXdK7d+\/A5HP8zi0vOTYuggWI9k8nf+ovr\/cQXPM9evTwLsrXdzoS0tPSS\/11lC8YupESUAJKQAkoASVQpARyVUqIWBr1eKfy6z1FoH333Xd7eTYijBiIjo4ulIIcdthhcvRRR++TEA7MGw3Vdu3aSdOmTQslb8WRyM6dO8VnmAda6q5dgYv263f58uUlJiZmv9LIa2eK0f+tnXJ6iygrhOf+7ZND7tohP6\/OkLSMPWU8vWmENK4RIdd+ULhlzCt\/+V3v8\/kkNjZWatasaTuFuM62bNkiLN8XY\/+SaBkZGYIARuy1bdvWCJg0mT5j+l4dASUx3\/uTJ8Tf7Nmzg57LXeaeQwjXqFHDisAuXbpIg\/oNpHx8+QIdsk3bNtK2Tds898ktL3nuXEgblE8oL507d7avRo0aWfHfsWNH4UXdui82b+48WfX3qn3ZVfdRAkpACSgBJXDwEkjeKpK4SUwP836XIfPTx8S37Nuc6SRvkawdG3IuL8oliSai1xx3Xy3z08fFtzRIWfY1wYD9cnWtLl26VPBIJSYmyu+\/\/y6tWrWyu+MRSk9Pl5NOOsn+XrVqlfz888\/Su1dv+eLLL2xj+Kuvv7LrTjvtNAmPiBC2IdQWQRAdFSUndOoktWrVsh6FmTNnyn\/\/\/We3p3HdtWtXe9w\/\/\/xTfv31V6lQoYL1SlauXFmaNGliG5yHHX6YzJo1y3qmEAt43xBrvXr1snnFe0xjHWvcuLFtmE2ZMiVH3sgTHmvSxgs3ffp02bFjh92PRi0ecdJG4G\/bts2miQDFjjzySPuyP4rxLcrw9FqgeCK8edj9wyz7o446SoYPH2699ps2bpIHHnxA8CRjffr0sZ5m9qehfdvg2+SPP\/6QatWq2X2d95xOhbFjx8pbb71l9+vbt69cc801tiGMR7ply5by8YSPZfOWzTLunXFWIL388st2W1g+9dRTcsQRR9jf3je8wsvWZ8obl8TaxbuMAO53XLSc3SpKzh+T7N8UbTisZ4xc9HqKbEouJ9XiS55YjIqMskKRTMOLcHw+MbjvSMy+xmDNtYcXDWM7Xhis3D6r\/1ktEZERcsghh9h1DBdY\/e9qe29UrVrVLiuOt8jISJt\/yhARHiE\/\/fyTZPlMh9js72TXzl3Ww0n9cUTzI6R1m9bivde995c378nJyfLll1\/aiBQ8zxGm\/uhzdh9Zs3aNzJ07197DLDv22GOlQYMGdleW03mHVatazR6X65X6hPv+lFNOsfmE5+TJk+09T33G71B54p5fvXq1TZM3tqdeYR8iZqhvzjzzTJs\/1tNhyLoWLVr4IwHq1KnDKmterzHn\/fTTT7fpBXJKTEqUNNOxUO\/Qev56Jy01TVLTUu010b59eyHdyVMmh8yLO+aB+HRlTElOkZUrV0rdunX9TDg+5V68JLuO4XycfPLJ9rxQtzuebMd+kRGRsmnzJlt3LF++3NYleIq954E6rFmzZuyipgSUgBJQAkrgoCfgmzVO0j96RMQ8551FdDhTIi96zP0s2Kdpi2TMeFciwyJEmnXea9+M1wZJ1rYNEnXv1L2WF\/oPk4fMD4dKxrcf7hH3pu0TedkIiWh\/dv4PZ8syzpTF+G+b712W\/CeS+5Ym5eCG8KMR27p1aytaEaY09DBEJl4QZ4hIGoJh4WHStElTu5iGY4cOHayoteIqKck2EvEihJkC\/fjjj3a777\/\/3gphhCXr8ERPmzbNii8EN2lvMWOEaQCxDcdxYhTRhQeiqxHP5I3jICCw2rVr20ZXvXr1rKBLTkoOmjc8qJSH\/b\/66it7PNLE07Vx40bbUCY98gUPhAeNORrcNOTwhhWn4YH8ddGvQsfFokWLbIcDHRdR0dmeeATC0PuGyi233CJvvvmmHW997733ZvMy54vzhKh97LHHZMKECbYjARZDbh9iOSN6b7j+euvZRPhgiIl3331XnnnmGXn22Wdl0qRJ9sU6Gq4I33POOceuT05Jtr8feeQRGTdunNx4442WIdsG2nd\/ZkicOUSLWtnnsOthEfJ833KSkpazh6xzowhzY4h8+fuecOTA9Irzd1p6mu08YXw79xKREQg4hC5C2HmO6cjAa8w1zT3Feralo8gbTREdE23XI4Ix0uA8xcXFFWcx\/fcbmdi0yfRm7jbul42bNtr1iNb6DerLnNlz7L3e7uh2wov7a47xsgYaYpr7HAGEsMTDmJ6RLnPmzJHKlSrb+49PfrPdsmXLrBDGM8m9mbLTjLk19Q1GWuQFcenM3fP8DpUnOh84PnUOHWINGzS0nUINjPimnqFuo1ycU2d02nGPzJgxw96L3kgA6k8EIZ0Z1HPktbwRhsE4Ue+5+tXVO9Rn5IMIjR9++MHmIbe8uDwdyE9fli\/H4egEpdyUl3Jz\/X799df2k044eNBhSmcJdWuz5s3sNYMwZvvYcrE5zoPrOMpxMF2gBJSAElACSuAgI+Cb\/a6kj7tfwuscLtF3fSzR906RyJ7XSvhRZ+xfSYxTxoiBHGmE97lLIs+\/P8fywl6Q8doNkvHNB4Kojx4+VaLvGC+RXS+U8MOPKfChwilHkLIUOKEQO4T0DNPAxGrVrGXFImNtN2zYYEM\/A9NyApTlNNpoLPLJuGEa7Lxo3NOwxP6r\/58VqAjJ9WYcan0z\/s6tQxwghmkoO+tmPNCkhbl88Z1lvBDWNDyPP\/54e2y8jhyT\/OK1oFGLKAuWN9LB3IQ3NHLd2GYa1HhGnQDBo93JeLQpX8sjW1qhvMWIF8Jhi8vwTr3\/wfv25c2D89Z88803lgENd5jgxR09erTlRePziiuusALMeccZF1zHNFDx8Dz\/\/PO2sUqD9dxzz7WijTTGjx8vPXv2tOlyTLgvWLDAeskQJ6zre05fmx28oBgdB5xj1oWyJet9cnjNCIkwItdrUYELzMqK5cKkekKEpGZrQ+\/mxf6d6wMx4wQNGXLCls4dBBTXIoaYhTUdLa6zgXuO8fBuHdshAPCYIqwZk0vnDt5nRHVxGfc9983UL6eaaIrtkmZEHPeyG8tPefB+Ul6um7XGs0snUo2aNWyWExISZKspTyijs4vOGoz7nnu8SdMmNq3DGx8um+ZusgKcugmPo4tcOPmkk2XSp5PsdqHSZnlueTq8cWO7KwKfyJLjOxxvf+\/YviOo95OVnHeEHR5lrndeDOvg3mNsL+eK0GkMsefMy8kt835S73B80u\/apasdo7tixQqpUrlKyLx49y\/O73TGkX8ienyZPqlTt47Nc6Yv05aH64fOSELDMc5JpLleOJ8wYogOFnge7EJ9UwJKQAkoASVwMBMwncjpE5+U8Fr1Jeq2Cf6SRPS42f898+sXJWPi0\/Tui8TESZTxrIa3Pt2uz1o+R9JeGWRCkE20oWkjRJ7WXyJ6DfHv6774vn1T0j94RKIGPCdZi4zDccdGiWyS3a7JTv8pHsASXqOeRN3yvkhCVcl4e7BkzpmUnQRpF8Cjm7V5tWT+Mk0iT+wnEefcl52GCWKMqNfSZUlyK5fvl8mS\/poph2krhFepIT5TvnDZLQ5MuHX6qPPFt\/6f7DKffqVEnHGbP919+RJUDNMgWfPvGtsw+eDDD\/zpEraWX+GHd8OZz3hmvL35FStkTwaEhxiLMRNtOcPzQaPPGd9zmzyIxhL5YtwvYZfk\/aupX9lQO9Jwnhtvmt68ueMQnochLp3582k8qDTE4z15q5BQYa98un0O9CfiiNBkRLozQr9vH5J9M9C5sGbNGitm3XoYI77oRMAjTNmqV6tuRXGUETAR5oXQIfTVmRNz\/OZ8fPLJJ\/bl1uPBIx08nN6xggg3vMLDhg2Tt99+24ar4h1mcrVgVq+Kudz3nP5gm5T4ZVyDMOZ6xFxYNA18LHz3dc93rkt3bbrP8Ijs+4L1zrguOQd06lTxVbGeUu895bYrjk\/yW81MsofgcWHc9n4x5XX3H\/niuiIE9rPPPvNnE4GIh3DhwoV2GdcdY5CxYHUN43W9xvWPea9PfjuWfM\/NQuWJoQF03iBoiZiAddeuXc34\/JzeT2\/63BtnnHGGJJqhFvOMBxePMKIVC3bNB+PkTc+u99Q7rqMBT7frPPFuX9K+cz7pJPniiy\/8WWMZnUJ4fhnCQecnbOg0cNeP25hrINh5KO6ICJc\/\/VQCSkAJKAElsK8EsrauFUlJlPDu1wRNwrfgM8n4+EmJ6Hi2RHT9n2SOf1DSx9ws0fc1k7ByCZL23JUSXq+JRNz4kGTN\/UgyvnhVwqrUlfAOF2anFx0rviUzJP39h40wvUjCW5wk6d8bscu4ZGO+xdNt+pEnXyrhrU6WjDGDjNA8TyIvfMAK4ajz75KwhkeLb954Ca95WHaa+XjPWvmj2cqI686XBt06t3KZxqIVwhGHHSkR\/UZI5qTHRbZMz07HtK9TR54v4anJEn3r2+L7zeT\/8zEmj21t2YIeLB8Lg4phvBiMTyM0mUY9jS7CcBm\/57ykNGiceRv39PgjBnIzb4OSyZ+YOdQZ3rS89nfbsh3jhglPPProo+3if\/75xza427drL42bNLZhwYw\/ZNvc8ubWEZbojBldMUItMRqmB4O5sdLkFU8tId+PP24uJo\/hlSfEmdmozz77bMsH7y\/nI9N4auCAsPUKYrc7AuR6Ezp91llnuUX2M9R5QxwTWo2wuOOOO6RBgwZy\/vnn77Wv+\/HnBp\/JC2LGLQn9yXYHg1WsWMGGNXtDdV2+Yea4BX66bdwnnlTCrol4wOiQKU7jfkD8EZqcH+O6wnPsnfmc\/ahT3LhnRBFjjwONYyFwzzGRDW4IgNuG+Qa8961b7v0MHFfv1oXKE+sRYbyo+4h8oPMIkZwfSzB1EnMqfPjhh7LdeM3Jf7BOuLzSop7lPuTa8Ap86uSDoT4ij3QCMbY6mBFBQmfdvHnzbPg32wVOCBjsPCCk1ZSAElACSkAJHNQEIk34r2nvhu320gaWJXPeRAmvbubT6GfGExuLHPiGZN7SVnw\/fyphFaojUCTqhrdMb3t5kb5DxbfiRyNiP7RiONy0E7KWzpKMCU9IZOdzjYd2aGDy4ptlHJ7xFc32F2R7Ydv3lIyZ7xnPYLbzxvf7HIk043v93t0cKeSywEQvhlXNnucmcKs8y2WEdOS1r9pyRV4xWjJvO8okYdrLiRtFNv4r4T1M54Hxkocd3Utk+tuStXKBGWN5UuBh8v17j6L17EJIIg0YJikhVI0QZ4QxDbIVf6ywWxLe5kKLf1v8m98DhHimAYe3Nq\/xtIwxphG86u9VtkHE9kyEw\/5Vq+Q9KRDjjRHPCGE8DYSROiFI2qTH+DqMhmRueUNQE85Hg5e0EB14WO04wH34Cyd70GJ683rjGJv5yy+\/2HF68CCklHJlGLGLxx4unNfPP\/\/chuCGw8mILoQXY38R03SOTDCh0Xgn2Z6G6EsvvSQrlq+wQmb578uFMZbBjDGwnFMa9HiPuZ4INQ1mLc1Y4X82Z0pmPkTutl1ZsikpU2IiSmYHBSKA6wgP4frd4hUvKGKP8a\/uv7JdGGhcbJw\/KoEhApwTPMp8OuNa5N4gXdJxXkK3vjg+8yvIuG6qmHv9HzNkAW8p1yJDELhuKAd1DK9Q3m4X9j9z5jd2cjc6ZOhc4fhENTDpHfUWvOb\/ON9+ckxn1EcYkznhqaQDL7c8MY6bMfjUKdSDXPt0ZiD+OcZff\/6Vo36jk4JrnaEG7MekgtRHRJjg4WTYBcfnnqLs3jB6l89gn2xHWTkunX9Yo4aNcs1LsHSKelmwa4Fyw4L\/mqfcCF\/qC87\/Tz\/9ZOsczi3DXVxnAV5fhrbQwcF9Euw8FHVZNH0loASUgBJQAkVOIMPMZ2KaeYQ7BzPbjjHeXb8xIZb7HUUkq2nnRJixwbstrPqh7qtRzlGSudhE0xnBHN62557l3m9mG0k2w9yG95C0B3tJxvR3mL3VjOGrIHiFMxd9K6m3tZf0kX3MdtmTu3p3D\/k9PRVPh2RtNp7vIJZnuYjWNZrMb54ymsabZEx5QdIe7iPpD58tpkEhWf9la1P\/9gX8ksMzTMMLAYNw8RqNQATSqlWrbDgbk00xSyuGyMR7youGLQ0gGjO8mPQlmLmGKutJh7GtGI39E8x\/5rqGvtvOmwbLOJabsIcJa5wxZo\/8IIJ5IepdGojEUHljG8YmM7nLxIkTbXLse6qZhTY3c2nntk1RruP4CNhAc6HnzOA7aNAgG6pMuDJ2\/nnn29mczz3vPHnuuefsCyHiBAdpjhw5UgYOHGjH+HJOGOvIJ9a\/f3\/rnRxw3QD7m7cRI0ZI3Xp1\/azdCq6le+65x\/20x3Djif0Ld3854bBISTFjgOf\/Y8Z\/N9i7nyaGPxj22NTl2aL5tGaem8Wzvji\/wg\/BygvjNyIPAcsLUeU6k1iPh5e\/qMG45hAPjCPGvB0bpINQQFQlmGu8JJi7JvKTlxNPPNGGSOMF5IUxLphZk\/My6h8iHOjYYTwwRudV8+bNpVXrVvZ6RHzy8jKDK9c1Y1d5kV\/vOOtQeSJSBAHKyx2rTes2RtBXsecAwf3Lgl\/sGHx3PIYeuOPYncwbxyZCBUNgM5mUm1mZzo38Gvlg9mUMZpQrLj4uZF7ym25hbgdbrlGv8RzZvm27MMaZF0YdzNhhfjPZn7M2bdrY88N\/OFPe999\/3\/JDQAeeB7ePfioBJaAElIASOFgJhFWqZSeG8s39WCJOvCJnMTJN5GzmnglArXLeLTQljehVo6RNe8VZ1vb1ZpFZhhkxGnH0aWbG1Q2S9mx\/iXl8frYHOXutfc8yaeF5jho2zbM0+2tYjYYS0\/ky8f0wQdLfusd4mB+SyEtG5tgu2IKwQ1vZxb7v3pII47HOYXmVy3SGC74uo\/33MspuxH30oFckrGmnvVbtz48w01u\/m1rBk6FBT+PeO87WpeKEQH7HdrE9IiGUZ8ilm99P8kZoZLDj55U3xAiGMCkthpcFzwv\/+ewNM6XzA4+TVyB4y4xnk3Ps3cetd54t5zF2y4N95nUc9uH+7fBkspQ3k2N9dV1csGTsMrY7coTx2NUKk4\/6h94uZAIlYAXng+s9GPfc1hESDMsGDRrkEB4loFj5ygL3H9cc92ageMpPAtyfrmPAu71LF3H68ccf2444hBdGKHZSclLI+sXtG5inUHVBbnUf++ARRuwGls\/lA3EfuM5bFvedv3rDo8o4atLlegnsgMgtLy6d4v6k3Ay9Ibzb+7ygTNRLgfW+297VwaHOQ3GXS4+vBJSAElACSmB\/CGR+8YxkfPq8RDRua8bIPmzEcYxkrZgnYfVbG4\/xLEl\/7yHrpQ03wjTzg3vtXxVF32ZCmWPNmOEHzjCC91SJ\/N9T4vtxoqS\/eadEdr9amIAr9fZjJfL0qySiy2XGu9vOTERVy\/6dUvpLV5sxwxvNhF0fi53J+p1hZrsrJOKU6yRr7VLJ2rJGwuodaccT279AKm8it+4+QcIObZ4dupzPwmY83U8yl\/8kkV3Ok4juN0qW8Sxn\/TFPwo81QzLnvh+6XGbW6LQRfSTyhL4Scb4Zu\/z1S2YCsacksvcNEnHqdTYvxuth8vKihFWqLb6FX0rYEV3t9\/xkzTvHjHM87ZcYzs9BdRslUBACv63zSadRSTLtpvJyVJ29vcEunS+WZcoFrybLknsT5JAKe3ui3Dal7ZNOiVTzX7P8pRKRD25yrtJWzsIoD\/+R\/enkT\/cSw4WRbnGkgRhmiEFus7AXR770mEpACSgBJaAElEDhEMj87CnJ+Owl6\/V0KUaeM0TwFmeMu10yZ2VHrJpedInsc6tEdLvKbuab856kv3O\/f7+Itt2EMbaYFcMnXSIRp91gw7DTnv6fRPa4WrLWrJCsHeutGGY7K7DNXyA5izjyBAnvdJGkj94T\/SnxZijpze9IWO0mbrO8P43TI+OVAZK5YMaebc0Qteihnwle59zKlfnp42YysFey9zOh3OGVa0r4Mb2MyL9Jsjb8JRmjLhRf0rbs9Z409xwo9DcVw6HZ6BolUKIJMLaWscZ46QNn3C3RGS+GzOFFZOhF165dD\/pOg2+\/NeN1dqXKKafmPlyjGDDrIZWAElACSkAJKIFCJMBfEoUxJri8mTfJCF+\/mfDgLBPuzEzRey3fvUHWVuPNjavkn\/jKv19+vxB+vCvJjD8rt3caiZtNCiYcMyF\/k4cGPZzLezkTbRtfZe9N3Lpg5cptHanYvJlP8zdQBTEVwwWhpdsqASWgBJSAElACSkAJKAEloASUQKkgEEwMB49DLRXF1UIoASWgBJSAElACSkAJKAEloASUgBIITkDFcHAuulQJKAEloASUgBJQAkpACSgBJaAESjEBFcOl+ORq0ZSAElACSkAJKAEloASUgBJQAkogOAEVw8G56FIloASUgBJQAkpACSgBJaAElIASKMUEVAyX4pOrRVMCSkAJKAEloASUgBJQAkpACSiB4ARUDAfnokuVgBJQAkpACSgBJaAElIASUAJKoBQTiCzFZTsoipY6sOlBkc+ylMmY538vS8XVsioBJaAElIASUAJKQAkogTJJQD3DZfK0a6GVgBJQAkpACSgBJaAElIASUAJlm4CK4bJ9\/rX0SkAJKAEloASUgBJQAkpACSiBMkkgbMmSJVllsuRaaCWgBJSAElACSkAJKAEloASUgBIoEwSaN2\/uL+fKlSvt90jvQv\/aIv6ya9euvY5Qrly5vX7rDyWgBJTAwULA1Wdajx0sZ0zzqQSUgJeA1mFeGvpdCSiB0krA1XWB5dMw6UAi+lsJKIJ92e0AAEAASURBVAEloASUgBJQAkpACSgBJaAESj0BFcOl\/hRrAZWAElACSkAJKAEloASUgBJQAkogkICK4UAi+lsJKAEloASUgBJQAkpACSgBJaAESj0BFcOl\/hRrAZWAElACSkAJKAEloASUgBJQAkogkICK4UAi+lsJKAEloASUgBJQAkpACZRiAqEmEyrFRT5oi6bnqmhPnYrhouWrqSsBJaAElIASUAJKQAkoASWgBJRACSSgYrgEnhTNkhJQAkpACSgBJaAElIASKEsE1ANals52ySmriuGScy40J0pACSgBJaAElIASUAJKQAkoASVwgAioGD5AoPUwSkAJKAEloASUgBJQAkpACSgBJVByCKgYLjnnQnOiBJSAElACSkAJKAEloASUQFESSE2R1LdvF0ncJOL9XkjHTJv4iGQu+SY7taQtkrVjQyGlrMkUBYESK4bT09Plq6++kt9\/\/92We8eOHfLll1\/KggULioKDpqkElIASKFQCS5YssXXWzp07\/ekGW+Zfab6w\/sILL5RZs2Z5F+t3JaAElECxEZj\/w3z5+uuv7evHH3+UzIzMIsvLihUrbB3IMQtiH3\/8sfTr10+2bdtWkN1024OYAAIz8drGknhVQ\/8rZdgpkrX13zxLlWVEcNo3H4hv2zrxfs9tx4x54\/3Hccfc+XifnLtkZUnq129J5op5dt3OlwfIzpHnZ2+Xtkt8K+bk3KcQl+TgcnUjSX33nkI8Qu5J+Vb+LLJzR+4blbC1kSUsP\/7spKSkyOuvvy4tW7aUO++80742bdpkP\/0b6RcloASUQAklsHnzZnnttdcEMXzWWWdJlnlAPv7445Kamionnnhi0FynpaWJz+eT9LT0oOt1oRJQAkrgQBKg3nrt9ddky5Yt\/sOGh4fL0KFDpXnz5v5lhfUlNjZWeEXHROea5MqVK+Xuu++W559\/XipXriwVKlSQSpUqSVhYWK776cpSRsA8L2Mve0DCD20lvr9+kp3vPSy7XhkksYMn5F7Q6HIi5jq25v2e615Zdp+4m17L3irTJ+FVDwm6R3iUuX55GYs57z6R5K32e8bsdyVt5jsSN+xr+7vI3hyX2k0lbfrr5vWOhFU\/VKJPvrrIDmkTNvVF8qhLpPyd4yWsToWiPVYhpl5ixXBUZJSt1CpVrCQjR44UhPBll10mbdq0ERqMLFu4cKHdhuV4kt955x0ZOHCgdO7cWd5++22ZPHmyPPDAA9K4ceNCRKZJKQEloATyJnDMMcdIdHS0fPfdd3LmmWfK33\/\/LXTynXzyyXZnOvn++usv+71Vq1YyZMiQvRJNSU6RGwbdIO3bt5drr71WPvjgA5k4caI89dRTttEXWAd27959r\/31hxJQAkqgMAjExcVJRkaGvPjCi\/L78t\/loYcesm0rHBZ4Yvm9fv16iY+Pl8GDB0uzZs1sG2zKlCm2E7BWrVoyfPhwYabgxx57TP7991\/bdrv1llvl08mfSkJCgiQlJcmGDRvkxhtvtB2Gaalp4urAI444Qn799Ve7P+29tm3bWjGemZlp60Y6F2vWrGnbgXQmYu+\/\/7588sknwjbUr3fcfofN+6OPPmr3nzt3rkRFRcn\/\/vc\/OemkkwoDk6ZRHARM30dE8y4SVrWeFcRRS74X38Zsz\/Cu12+SLBOiHHvDWJuzzF+\/ll1j75L4Ed\/lmtNdL10j6b99LwkPzxRJqL5n24w0EaNNIpp2MKI4as9y8y3z50mS8tItIr5MCa9SQ3zJeEazO2bSZ7whvu0bJDptp+x8Z7jdL9F4ayNbdZbY69+wvwv9DS6Nj5ewmodJuUbtJH1xWyPITdRE4kZJvr+7RLbuJmnfjRcpFysJo36StBmvSupHI8XcsBJeo57E32E6ExKqScYM06FvOhgoFxbVqY+Uu3SUiOGa8mgfyVz3tylmmMT0vEaiew+RlAdOt2HnSQ\/0Mvv4pPyDX0vqZ89I+qyJ2UU028Ze8bhEHts3+7fnfdcrAyV93meeJXu+Rh3bQ8pd+fyeBYX8rcSGSbtyfvPtN0JYTteuXaVHjx528ZiXx1ghfN555wkNzjfffFMOP\/xwW7nOmDHDVr7ffPONxMTESIMGDVxS+qkElIASOGAEqH\/ovFu7dq1txM2ZnR0a1aVLF9sIq1atmvTv3186d+osixYtknnz5uXIG43HxMREuxwhTUOPV7A6kIakmhJQAkqgKAkgTNu1a2frIbzFw4YNs86Ka6+5xoraJ554QrZu2Sqff\/65VK9e3YYuV61aVRDUeJMRwieccILUrVtXqteobkUwbTyGxLGMeg7hnZycbItBHfjDDz\/I0UcfLeXKlZOxY8fK1q1bbYcgG9AGJIJw+\/bttq4k8mbOnDkyYcIEqVevnl1P\/frymJetI4X0qGu7detmhfJ7771XpGHfRXkuDmTaPF+mTJ5iX95nTUGXF3qejbM2fe5Hkrngc2GcbvqCmRLR7Dh7mKyUHVYMu2NmbV8nvsRsD61b5v0MK1\/JjiNO\/3GqxF3zzN5CmA0jjafXON4y5o6XjFnjJOObNyVrw0rJ2rzaCuHIw1tJ+YemSUTDVkZUZnfKsJtvxyYbih3RsptE1GsqEbXqS\/xd46Xc2WbMclFadEx26qmmDWHGReOpJtLDl7jNCOGPJObcwRJ3xSjJXPqtpH74uESfepnEDxlnQpwTJXnE2aasqbLzw0clqv1pUv6BqRJz9k0S2bCNFczJj5wtWTuTJP729yX69CskdfKLkvnb10YUD7THjL1oqMTf8rplgxCO7XevxN\/7iUR3u0jCax0WtNSI3YhDGuVYx7KiFMIcsMSLYUdlzZo19iRyIumZJBRm6dKl8ueff9rlq1evliZNmtgK9ZdffhHGGHfq1Mk2Ol0a+qkElIASOJAE6MRDvOId\/vGnH20o32GNsh8EzZo2k59\/\/lmWr1hus5SRnpGvrFH3BasDdT6FfOHTjZSAEthPAoQlY3TU0dZCpP4wf74VxSxLSk6SiIgI6+n96aef5PLLL7ciF+8vQvqGG26w0X3169e3bTm2HTNmjA17JgQ70PAEsw8eYNqAHP\/4446z+1555ZVWXLt92B8vMvXkEOOlvuWWW6xwpq51XuMLLrhArr76aqldu7bbTT\/zIMAY7pSdKfblHc9d0OV5HKbgq815Tp34jKQ8f52kTnnJ7J8lUW2NdzKYRZnQ6FAWFi67xg2VtG8\/lLhrn5aIliGiBYzI3fn6nbLzjbtl59vDjPj+XDKX4WnOMh7oNyWshhFu17xsPK5xdtlehzPHCK9WVySuvIQ3aGvCiJvvtbpwf4TJzmevkJThp0niDa2t9za600X+Q8Scd7tEn3KtRLQ+TdK\/f18kvqJEd7pYwspXMV7bXuLb\/J9R8Wa4lsmz7+\/FkpWeJtE9bpTITpcYYb9RfBv+laguF5oY8DiJOsYIZyO0M\/\/6RcIbm44Icw9GNOkg4c06i5Svao+ZsWy2hFdvIDEXmJD2+kZQh7C4IXirYbfbzHe7zP0uos+ctU4RHWhfk6Xi7NChgzCpwrRp02wykZHZ0d2ExVBJnnbaaXL4YYdbzzEhMU8++aStCFmupgSUgBIoLgJHHnmkbSh+9NFHQofescceKxGREXZIx9i3xlpvCd7jYJaekT1umFBrzNV73u\/eOtCJbLuxvikBJaAECplAWHiYFaPzjfBFbBL9ghFuTF106qmnSs+ePaVixYry0osvyVFHHWUdFAwBcRNbufrMmzXCq+NiPQ1g70rzHbGMRe1u+\/E9zXjoQpmrK8NMQx5z+XTbI6YR1bzU8kcgzYihYFbQ5cHS2L9lWTYUN2HMSkl4+S8TetxJkp+4VCQjtWDJmmshY8EMc7HESkSLE0PvGxEpCS8sE3s8c8zoU6\/L9hib5dZz7PaM2DuM2i3O8niM3bIi+zQCNaxCFYnpPVASnvvN4+nOksimHfcc1ty\/krxdku45WZKGni5pZvIvBG3W9o0SP\/gdyUoxnuLhZ0jybSYi5M\/dE9vRCTHpObO8lwm77mm8yGa+k7XZHfsknGVCwrHwei2sVxiPfeKg1pIywoRPJ4X2zkt8JYm\/7R27L2\/2u1lW1JatKov6KPuRPpXYwOsG2jAZJqOhN7BGjRq2YUnlizeYsR\/08DVs1NA2PAmDYV2dOnX248i6qxJQAkpg\/wjQ8EPsUkfReHTjhQkFxDoc30HmzJ0T9CDMm4Axw\/TUqVNl+vTp9jfphKoD7Qb6pgSUgBIoZAJ4fAlRJgQZYYuTgjBkhDCTBNLxR920ePFi044Ol7fefkvOPfdcO0SEKD7WIVKpC+m4W7psqXTs6GmQ55JfvMuTJk2S777\/3i\/CmTsGMcvywIm8aPuxjtDohg0b2vHMhHc7r7PPTHykVjACnCvnEW5\/THv\/zgVd7t+xKL6Yayz6mDMlY9H3\/vDosIjszmQO5zpHgh86S2LOuc0KvJSHe0vccCOMg5m5tnNY+i4zaNiMqc1P30pm6E6cHOnu1wLjqb56tB1LnVcyWWmpxmtbV+IfxsO9t4VJQ4k3Y4oRwTtfuE52jhkkcbe+Z8rqk\/hb38z2\/np2ydr0Tw4OkSf2lwTzypjzofGo3ym7Prxfyl3+lGevvb\/iOY69dLhdmJsXee+99u9XkLO6fwkW9t5UaHhSLrnkEju+Y+xbb8mgGwZJo0aNrHflvvvusw1Feqeo6FzlyoQIruIr7DxpekpACSiB\/BLoZsamYXgj6tWtZ78zzo3G4chRI2XVqlV+ry\/LMD7j4uPsUA8anq+++qrd3640b6HqQLdeP5WAElAChUmAthjjgOnI69u3rwwaNMi2sZjRGZHLxFhMTsUwNezbb7+1\/\/5BZ16LFi2kziF17D7UbQhlxgkza3SgeetAt45jv2MmSGWMcu9evW1d6OpQJkplrhjnPWYfPNSIdfLC2GGcIzfddJOtV1kfHpHd9EXIq+WPAB2wPc\/oaV98d1bQ5W6\/wvzMXPmLZP33u2Qu\/FJ2vWvCcOMTjEe0mhW\/GatMiC8CzUz4tOvDR8RMUx7y0FHtekv8ja9K5n+rJPW9e4Nvl5khvlUL7d8j8RdJWRtXmbBfMzmVEYep7w+1n2lTR1tPq3mS50gj4tAWkrlqaXaezN8sFaVlpWzPV\/JRZjItJh1LmzhCZFei+P74QTJ\/MBNomXHGaZ+OzC7jYe3NhFxHic94icMq15Jw43He+fpg8a02HmfDNuP7tyVr238SVqkWYWySPnOs3T9r\/Z+S9tWLduKuyOP6SnhCJX9HRW6ZIxyb14GyMFPJ5Kcvo1Dzg+fWa4w32Rdz\/9\/pKlQmUKBCZobW0aNH79V43Jf0dR8loASUQF4EXH1W0HqM\/+qkE8\/VX6GOQz1HQy9YeGFgHRgqDV2uBJSAEghFYF\/rMG96zPwcGRW5Vz3FMkKrA+s4lsfGxfrFqTcd73e2u+rqq+wkWMwyjTfYWw\/mVYeyngm16FhUy0mA817Q51bOVAp3SUHyxP\/pJg0x0QVGoDoLr1pLYge8YMelIsSSHuidPXmU2SCidgMjxLZJ\/KNzzeRPJix48PESf88nElaxhv97eL2WZlbl4ZI29Q07OVS4EYHOMuZ9JDtfGex+2s\/IJm3t3zgxeVf2mGWz2ER1hVeuKVHHnyXRvW6VXaOvNLNJr5O4OyeL798lkvzgmTbPbt+9Egzxo8BcBncwE1ZNkvC6R+yVomW2u9yU1VnquDvNjNLG47vbCDeP\/d8Tkjikgwk53+3NNh1ZsZc9KJEd+5mJw\/4yIc99xWd4WjNDEpg5OqxGQ9n14tWS\/tNX9OpLzIV3S+q4B12yJu65gpS\/\/QMJM3\/5VBwWyJG\/aMMOajHsBUkYDUIYo1fwiiuu8K7W70pACSiBIiFA5YqVtEZFkRRWE1UCSqDUESipdRgOjmvMLNX8NdJdd91V6rgXd4EChUFx54fjF0Wesraav\/KKM+NOY8oXbRHN7MtZ29dnhyYbIZibMQN1WBUzmVYe27k0ioKLS9v\/afKPZ1j432Uvq0QzG7YZA8zfV+Uws86a+RumvcyOCza+VjMhlzW7nfnt\/auqvXY4MD8COZY6Mcx4FmZTdeOIDwxWPYoSUAJlnQCVK6ZiuKxfCVp+JXBwEiipdRiBi99+8639CybG\/KoVLoFAYVC4qe9baiUxT\/tWksLdS7kUDs9Ajk4Ml\/gJtPJbfP60nb9SUlMCSkAJKAEloASUgBI4uAkwfrhL1y4HdyE090pACZR4AtmzCJT4bGoGlYASUAJKQAkoASWgBJSAElACSkAJFB4BFcOFx1JTUgJKQAkoASWgBJSAElACSmAfCOhwo32AprvsNwEVw\/uNUBNQAkpACSgBJaAElIASUAJKQAkUPgHtJCh8pt4UVQx7aeh3JaAElIASUAJKQAkoASVQygmowCrlJ1iLl28CKobzjUo3VAJKQAkoASWgBJSAElACSkAJKIHSQqBYxDC9UdojVVouIS2HElACSkAJKAEloASUgBJQAkrg4CMQyX8uqSkBJaAElIASUAJKQAkoASWgBJSAEihLBCLdHw6XpUJrWZWAElACSkAJKAEloASUgBJQAkqg7BBo3rx5jsJGNmzYMMdCXaAElIASUAJKQAkoASWgBJSAElACSqA0E4gsjrG7gaHZxZGH0nxStWxKQAkcOAKuPtN67MAx1yMpASVQeAS0Dis8lpqSElACJZeAq+sCc1gsE2gFZkJ\/KwEloASUgBJQAkpACSgBJaAElIASOJAEVAwfSNp6LCWgBJSAElACSkAJKAEloASUgBIoEQRUDJeI06CZUAJKQAkoASWgBJSAElACSkAJKIEDSUDF8IGkrcdSAkpACSgBJaAElIASUAJKQAkogRJBQMVwiTgNmgkloASUgBJQAkpACSgBJaAElIASOJAEVAwfSNp6LCWgBJSAElACSkAJKAEloASUgBIoEQQiC5KL7777Tt59911ZtWpVQXaT6tWry5VXXimdOnUq0H66sRJQAkpACSgBJaAElIASUAJKQAkogaIgUCDP8JgxYwoshMn0xo0brYguigJomkpACSgBJaAElIASUAJKQAkoASWgBApKoEBieNOmTQVN3799Qb3J\/h0L+cu0adPkn3\/+KZRUMzMyZevWrYWSFols375d0tPTCy09TUgJKIGDm8Bvv\/4m83+YX6SFoB5LTEzM9RhZWVkyadIkCfaH9ewbrN5y6QauYznpkGagpaamBj0G27Fu586dgbvY36TH+v010vnwww\/lhRdekP\/++88ml9txC3q8\/Dx\/yAOvYJaclBSSQbDt83O8YPvltcyd28BzyO+vv\/5aRj8\/Wn755Ze8ksl1PQwCrx3vDqGuO+827nuwa26zac9M\/nSy+Hw+t1nIz7yONWP69Bztitz2CbYuFLuCbBuyALpCCSgBJXAQE1j822JJS0vLUQKWLVmyJMfygi6I5MEfzM4999xgi4ttGQ+Kfv36yemnny6XXXZZvvOxbt06qVy5ssTExNjG1yuvvCLXXH2NHHrooflOI9SGCxctlPvuu08mfjxRIiIjQm0Wcnlg3q6++mrp37+\/nHbaaSH30RVKQAkcfASC3dPh4eHy9ltvSdVq1UIWaPac2bJ+\/Xppf0z7kNvsz4opk6fIM88+Y5OIioqSJ598Uho3bpwjySQjwp5\/\/nnp2KGDlCtXzq5n2MzDDz9sxYS3LNTVr732mnzwwQd2uwoVKsj7778vbDNhwgR56aWX\/Olfe+21cvbZZ9u6+fHHHxfEG9aoUSN54oknJDY21ooM6tm1a9fadYcccog8+uijUqNGDZkzZ4489NBDftHUuXNnueP2O\/apPibfgwcPFjp927ZtK998842NaHLCtEqVKjJixAhp0KCBzUdB30g\/1POHdTB6\/fXX\/cmSB8oNA9bfe++9Mn9+dsfIySefLLfeeqtl6nZA1PH8aNOmjdx00025Pu\/oVLjgggtyiO46derImJfHhOSHGB9lzsusWbPsYTmn8D\/qqKPs748++sie+1NPPVVWrlwp7733nixYsMBlUcg3jHMzjnHTzTf7xWX37t1l0KBB\/rKGuu5CpRnqmltjrqcxr4wR0pcQboH8HItz87KJmnPtCkT2VeZZnpycbLN0yy23+J\/pua3zssN5cGi9eiHTCdyWa0VNCSgBJVAaCSCEly5bKmv\/WytdunSR6OhoW0yEMM9pHIlZvixp0bLFPhe\/QGOG83uUuNg4eXjEw\/Lnn3\/Ks88+m9\/dct3ujz\/+kC1btggPAUQxDbe8jIcUDYZnn3nWimG2p2ERFxeX1675Wn\/EEUcIDbh9EcKBeQsLC5MHH3zQNvDydXDdSAkogYOGwMsvvyxRkVGmkX+TnHfeedKxY0fby1nZCKzcjHqOjryisNWrV1shfP\/998vRRx9thRoNd8RDYP1KHtwDiLwghqivhgwZIghQBGNCQoLNJnX+1KlT5ZlnnrGiNs14bBFNRNEw1AaB18GIaoQv4vvUU06Rb779Vr41L9bTeXnbbbfJyJEjrQD809T9LVq0kFEjR0lYeJjccccd8vbbbwt5RRxeccUVtpMUTy6iad4P82z6BWVGnUzUEPmns5SOgosuusgKGfJ\/zz33yFum8wJRuq+W2\/OHztGhQ4daYcnQohtuuEG+\/\/57OcXweXfcOCsqOT6i95prrpGWLVtmC7ndmRk7dqz1ZiOGnYU6Hh0alNN5RdmODgbOe3hECGVoEt26bZts3rzZnifmAnnjjTdsB4Hr7KBzgg6OM88804rxr776Sm42wrbVka0kLT0tX8\/eh0wHS6VKleQpc21s2M2B8w+H3K47V2bvZ27XXGRkpL23uKaCWUGOVb58eYmKjrJlHmqu78MPP1xGPDxC5v84X4YNG2avXzoaQq2rW7eu7djxsrv++uuDphO4bbC86zIloASUQGkh0LhJY1mzdo0VvYhfBDHmhDAd7myzPxZZ2B5gJ4SbNGkiCLzCMjzY3bp1s42fX37+RY459hibNMvpFWCCLowe1VGjRpkH6VNWkNPLf3n\/yyUzM9M2oHjoT\/p0kowcNdLux4OF3n68DDSGaGTxwuhtvdc0gOLNg27FihXWo8FDmd5uepN79uwpr776qm1EjB8\/3n53jY9atWpZofzbb7\/ZRh3eHRpUQ0yveNcTT7QNycC8jTMNHtJs166dbVw+9thj\/h74vn372jKSxsSJE20I2jbTMFm2bJlNl4YpDVo1JaAESh6B+vXr2\/oFwVi7dm37crlESIa61902fG7ZvEWuvOpK6X95fzmj1xm28Tx8+HAraKiraHQjcvJbPyxauEgqVqwoxxxzjK1DEFiIl+W\/L7c9rF9++aX1znJs0s\/IyOCrLcdzzz1n66OTTjrJLnPiGfHx+eef27rSRd+4dT5TByO+EAoYdSn1corxUiL6SMvtg0CnTseDeaKp93k569qlq6z+d7X9ifh1hje5YcOGNn8sC+SKsL300kuFTgC8k+TVeXsRKohr9rnxxhuF58LTTz9tubj0jzv2OCtueE7wbEP4BeMf+BxxdTf78Hz44ssv5KGHH7LHQtBSd7Mcb64zOFQzEQPU8aQ3zYTh3nnnnf7O0gvOv0B45hBxwDOB5xPPQvK+dOlSl0yux3Os2RjOy5cvl0cfedSWbdGiRTmeW5wDx8UdAE\/vF198Yc\/jiy+8KIsXL7ad4HRq4AXHm9+1a1d\/NIHbj\/BnxDjXG9cE1wJRBhEREfaZhnef525D86JTgGua6yPUdUe6wc53zx49gl5zbIvhvcWzzfUHRzphOA7MczsWrLiGSKdZs2a2E4Lzy286VOiYoJP82GOPFa4tOn7oBAu2jrDylOSUHOzyu+0777xj72NbIH1TAkpACZQyAnTE8xyZOXOm1W0zZsywz6kdO3YIQph13s76fSl++L7sFGofrxDm4XznHXeG2rRAyxkzM3v2bLnk4kukb5++8t777\/kbPITv4TF2BhweIvT28vDhAUWDZfTo0ZJQPsH2BP\/000\/Wu0CvNr3DLmyPBy6CFHHMOo475Pbb7cOUh\/evv\/5qvRd4M8455xx\/A4Jj02tNOi+++KIN2SNdjo316dNHxpkHFh4MQsx4YAbL299\/\/23HvfEgpmHLA5dGxROjnpApU6ZYrwTppZgH+Ny5c23vyLvj3pVeZ\/SyZcxtfBX7qSkBJVC8BLi3vZbXvc62iEkEA0IYUdrzjJ620486AgH1+muvW2GHx5X08ls\/xMXF5hhniyDYvmO7HYNDmDICkToG0eqMOpcXD6EBAwbIwIEDZeaMmXY1QpO6D6F9ySWXWHHx5x9\/2nVVqla14uC6AddZryviu3fv3vbfBvCseesvvluhvDvU1B2b8n319VdSPr68W+T\/RDgSmhsdFW05uDoUDzWCh05GwqoQjJ07dbbl6nRCJyu2SOTaa661eWc\/vL+wIGSXDlY83WPfGmvreep1lrFdMP6fTfnMdpg+9dRTVlAz1vrTTz+1+cTDPm\/ePLsv0QJ4gEnHGWG0f\/31l7z55ptWSJJnWCDcvXZEiyPsvoSGsf5285waMniI9cR7x07ndTyX5scmGgCPfPMjmrtFOZ5bwcZrE0bMdYCI7dO3jxVlnHeeWwh8ziHsYUFUl8sb1wj7sZzrF54wIh24p2fsmTuDNDZs2GCfx6GuO+995D3foa45NzSBDh46qHg+cy3TKcU1lNs1TrsAIXyi6dRmKIA7R4Cj05s06fjBuFaOO+44uzzUOsoWyC4lJSVoOsG2dREZ9oD6pgSUgBIohQScIKatQB2M1qPu61oIQhhc4fQmB3vlxdI94BDAWDAhnLIzJa9k8rUeIcxDsmbNmnJ8h+Ntz\/cWE6oVzHjIOqPnm4YkXhm+E\/7Fw\/j888+3oWh4aC4w33\/88UfboOBhTJgS459YN9x4J2iYbN0ttnlII4QJj6aH3Hsswro4ztIlS21v8+1DbrcPwlatWtmQMfJEuq6xGixvLt88iPEo01POdsTB32QacIQvMhEIVs+MJ2KsXZWqVeyDlEbeDuMhV1MCSuDgIZDXvU6dQwQJwhEhfPfdd9t6hfAgPE54nmKNqKUuIErEl5k9GVB+6gfqJuoNhnogauis4yGDIdgIt8XzSB1DhyJ5waj3+I7oOP+8860oGPGICQk1E32xjjTHTxhvRSf16KAbBwkiD2FAp2FiUqINz6ZT0IU7EWqN94wwYCY1QpgEM7xgCIKLLr5or9XUq+SROvjodkdbMUMdyrKmTZtawUK9zXAbRF2Pnj1MXeyz5UNMEvrb6LBGtlykQaQQNuWzzyx7oo2w5s2zxWIo\/gihCR9PkJ49egpjmyn\/8ccfL3haMZ4\/nCvOJcfB20s+7ZgnU4bHzLmg7HTK4hlmf\/aBaaWKlWwavDlvO52+nD\/GeXfp2kUy0rO9927D3I7ntiHt942ou+qqq\/znONRzy+3DJ2UiPBpvKtcDz2dv5APDkbqf3t0+w2jA0MGMtx\/eXAt8r2uuYa5fzj8ilHQQjzz76IBgDDUeeiIeIncL5WDXnbuPAs93btccZeB6vcrkA3Hcq1cv+1znOsztGiefdE7RCURkxcUXX2w7dLgGaaDRVnHj6jmG81jkti6QHeUJlU7gtu6+5FhqSkAJKIHSTMDVd9S3hWl7lGMBU+XhxgOYscF4RGmsERrtPMKFJYQpMB5bGk40YJzNMO5yvLP5sczd4X1sS0PIO0FMLdPYwMLDwu0DumKFivY3b3Hx8fah6BbwUKM3O5TR4Hv0sUdtA4cGJHl\/YfQL8smkT2zaVY1nhIeo17x5c8t5EGPeB6rLJ42fVNN4oWHHgx7jgez2sQv0TQkogYOCgLtvQ93rUaYuoLMOI9zWPQhYvmbNGtux5wpK5EtSclK+6wcEALMmM9QDD9c5fc8xEwG9bD16pEmj22vu2CyjHiMMFrGGrV+33ob\/kkfqSTtG2nREMnSD\/P9qZsVu0LCBDQkeZjyhCB6EFJ5n0jnhhBPsmFy8h4QuX3755XYipkiThjNEMmIZbyJ1njPqWUKNefZQDvIJV+pH0go08s7zyhnb4bVzaXrrZCJ4eCHg3n33XSvwJ4w3Y6pD8CfslnSo83k5IwyYjgqeP4yfdYb3lPxk7BaIjNvF8EjfZTo+ELqMkeb62LZ9m9vNPg\/5QacFwpxOWp4\/69avsx0BhNRXqlwp1+O5xAg5Iw+Idiw\/zy1Y4x1FQLdu3dolZfd1PxDsA68f6H7aaxWWC35ZILVq19orVB2vvptkjnk+6Gz+5JNPbAjyGWecIQsXLrTphLruWh7ZMuj5xuPMtTEsyDVHx0W8ecbHeuYQ4Zp3kWahjsU1zvlArDpz4\/rxruPJpr1CmDdGhwSW2zrWw91ZQbZ1++inElACSqC0EqDTlmed8whTX9J5zzLvpFr7Wv59HjNMCDTeAASw6zXnrxQeevAhMwascDzCFIrQYR5oPOzpGY+MirRjlGgUnX3W2bbc\/2\/vPODjKq49fNRtSbbljrtxxZhm0xIIgdBL6C1AAiQhQCDkpVBCCyRASCCFhBJKAimPQCih9x4exRhMtQED7r3balZ\/84088vV6V1rJarv6H\/\/k3b137tyZ796dnf+cM3PDKDkfgkDkvQ9Xcj\/yjVn0B4gfrfL1Gx\/dwQ8anaBkjHxYHIMOBaPc2IIFC3yHiJFsvBOEurH4F9ZY2djHDyp\/wYrX1XtsCIvDSCMTARFIbQJNfder3PccscE8RtpA2hHmxTIghuc2iKdYCsm2DyNHjrSrrrrKH047y3Hj3CAnAjashsvOqBAO54q2tQWFBd7jG\/YxuBgMwYex2BViAyHMsUToIHg+\/+xzL3722msv4w9DFCO0Qwgo85dvuvkmL4SDd5Z0tLsIxrfeessL4XAu6sEf4pOonWBsQ6zHWySMtImM35jJkyZ7QbxmzeqE\/CkPwu6cc85piAgKebKP8rEqZljzIvy+REU\/6RFSCGjm1GJBqPsP7r9P3LxgFrAiGgBjkaqo4Tln3mpT50PwMRjCXOrwO9rY7xbn4D5hcSeefoAwTNYQjAhIOBCOzNzxEHFAH4LODsa9wUrX\/GHMGWawJHOD+Ix33yW63o3dcwMGDjDCkbkGQczSuRo6ZKg\/L\/8lOhdl9b\/FG29zfwzefAZiQlmpKwMWlL+xfQ0n3PCmOWljj9VnERABEUgnAkEIE0GFQ3IfFxqNvbxhDnFrCOKYptznn9R\/CF4EMSPEGItoEMLXmkKYfAldJmQLT+jgIYN9+BphZsAJi0cRRs2PGOKVucHBe+tHfV3n41W3OEbodJBnPMPjygJdHM+qpKTHu0FnrKiod7xDNtmG95pOAh4HL6pdx4ry8GNKR5L8mAcWrLGy4XWnI0jnl7wQ0Sz4xQq0LVm5OpxTryIgAp2LQFPfdcQKHWO8ZghFFoyiLWHKBY+sIaSTz7RZ0YWTkq0lHkiO\/\/TTT73X89BDDvVCbMcddvSL9\/H8Pjr0hCcjODAE1vbbb28scsXxrNHw0EMPeS8eUTeIqrv+dpfPl7UN8GAPHzHcRo8e7ee5zvpils9nxvQZ3gs3aHC9d5k2nLJQJ+acErZN28ln5i8TVgsL2lnOyZQRQmhfdItL4f1DhLIPFnBFeNOGUka8puxjIIH6IAARv5yTQVw4R400CHCmyVAm2uAnnnzC\/x6wAngi\/rT3XCfKz28jx7L2AwITQyghcAn1Zh+\/CSz8BVN+Q8J26sfq2rT58MQ7yloW7GdeNmHNhPXiQee3l7LyRxoGY1nELAiqeOcLv5FvT60f9OBRSMEa+92CIWHczJPdx63oSTkZsI43kMDq2ITfM5LPfgYg4Mq85CC8OSf3Ht7pEE7MdSW9\/z13zysmtP1wV\/\/G7rtE17upe45r8Pjjj\/ty4X3mWuFlaOxcQ1z4O\/2Px5+oP457nOvLtcdjzHeA7wb1CPvovDW2L7APr81JyzOOWXkdtqyATT+Mc3P\/MT8+3rUJ59GrCIiACHR2AvzuRYUwvxX80a7yW8Y+0myJbdFzhoMgZiEJOgptYay0eNmll22SNQIV78Izzz7jn6vI3KIQMs3KqGHUFuHIIx4IBSSUm5Hy6EhvyDSMCtOxoON2+umn+12EHd54040NAjT8WIfjeGUbI8QvuxEKOouMsGN0eliVmjBBRtExPDkhDzp5icpGGen8cRwLzIRjw+h\/PC9NvG3+QP0nAiLQaQjQyY5ac77rPMaIFZEJEyZE9bwfnOc9bHjZMJ4MgNc0XlsQbxud5\/OcuKbNw\/DU0gZiPNf4qKOOavA4In5DSDT7eQQQHe1jNngG8VzTVnEevHwsLMVaFBjlRPBxPhb7O+fcc\/x2\/mO+JdFFiNKTTjrJC0TyYAEromw4hgWoMAQmfxhpGKxERJEGNsH4cbz3nnu915ww7FDGI4840p87hB4j4DFCcqP5hnwQR7TDwag\/ooNz461PxJ\/fDxbGCu0+x7PGBnO8ud6wYJEpjN+YW\/58i9+ON5zfqmD8xrGGBca1YG5xOA7BixjGor9p3ivpyhessfPB7Z\/\/+09jACTqecZjm+h363Unthg4IHLgZHcvBuN+4HFZ0fsbMcsgRTDKxmd+v7nuiDaeygBP5lAHmz5jur+\/+QwfmIQFrxLdd9STKInY6\/39c76f8J5j8IgBA8Qw9xJGucKzKhOdi\/LyVIhfu\/OFhTn5bSeSi3KwkB2RAWFaF3OLGYTBEu3jWkTZNZZPbNrP3GABgw7UnYGDadOm+QXIFi5Y6AcaWFAvmrcviP4TAREQgRQhwG80v4es5RE0FEXn\/T5OECOESbMlluHmWG2cqBLJKd4jlw51jynYEnvSLUaC8SMZNUZBt9QY\/c\/Ny9tkxDnkiXeVH5Bkz0N6BHUI0Qv5tPSVsmW5jkC88zdVNljF\/vi1tBw6TgREoPUJhPYs3ve7OWdryXcdDxAr7xJ+GvW2JXtePGOcl7LHO76ptpC2jZDQeJ1tBG68fCkzA6mx+8K58PIhBlrLErW\/yVw3yrreTZ1JVMfG+Ie2ncHW2PoEBrG\/MU1dD+pS637LYo9rilWi8zV2XCJujR0Tbx+cqVdsmUOZ4l3vpurJ\/kTXJF65w7li77lQ3sbuhUTnCnnGKz\/5cv\/zneKcsdbYvuamhS0D8XwHQ5kCa7zyIQogNt\/o58bqH02n9yIgAiKQygRo66JtMgsiYhlOaMUVw\/Eq25nFcLzyapsIiIAItDUBdSTbmrDyFwERaEsCasPakq7yFgER6CwEEonhjfFUSZSUkKKWGo+RkImACIiACIiACIiACIiACIiACIhAZyDQLDHMYxRaImoR0WEV5c5QaZVBBERABERABERABERABERABESgaxNoVph0a6EKITkhv2j8dtimVxEQARFIBQKhPVM7lgpXS2UUARGIJaA2LJaIPouACKQjgVYJk05HMKqTCIiACIiACIiACIiACIiACIhA1yPQrDDprodHNRYBERABERABERABERABERABEUhHAhLD6XhVVScREAEREAEREAEREAEREAEREIFGCUgMN4pHO0VABERABERABERABERABERABNKRQHZYOKEjK9cZytCR9de5RUAEUp+A2rHUv4aqgQh0ZQJqw7ry1VfdRaDrEpBnuOtee9VcBERABERABERABERABERABLosgeyOeBxI7OhjR5Shy15xVVwERKBVCYT2TO1Yq2JVZiIgAu1EQG1YO4HWaURABDqUQGjrYgshz3AsEX0WAREQAREQAREQAREQAREQARFIewISw2l\/iVVBERABERABERABERABERABERCBWAISw7FE9FkEREAEREAEREAEREAEREAERCDtCUgMp\/0lVgVFQAREQAREQAREQAREQAREQARiCUgMxxLRZxEQAREQAREQAREQAREQAREQgbQnIDGc9pdYFRQBERABERABERABERABERABEYglIDEcS0SfRUAEREAEREAEREAEREAEREAE0p6AxHDaX2JVUAREQAREQAREQAREQAREQAREIJaAxHAsEfd50cJFtnr16jh7tEkEREAE2o\/AsmXLbMmSJe13Qp1JBERABDopgdKSkhaVrKKiwtavX9+iY3WQCIhA+hPIToUqzpw50zIyMmzs2LENxaVhmzNnjg0bOtQKCgsbtrfGm+KSYp9N7969WyM75SECItCFCcyfP9\/Kysp8+5WZuXH8cdasWVZXW2ejx4xOSIfjaqprEu7XDhEQARFoLwLz5s3zbVn0fD179LTBQwZHN7XJ+7LSMpu\/YIENHjzYevbs2eg5ysvLrbq62nr06OHTLVq0yGprahttaxvNUDtFQATSmsDGnlknr2ZNTY332MYWs6a2NnZTq3zOyMxolXyUiQiIQNcmQMetrq7O1qxe0wCCwbzKykrLL8hv2JbojdqiRGS0XQREoD0J0I5lZWXZkCFDbKuttrLu3bvbuuJ1Nnv27DYvBm1l3759rTAJ5wfRNMXr6p0aFKxfv37Wt1\/fNi+jTiACIpCaBFLCMwzanOwc3+gWlRbF7UAS1kxIIY01XuQBAwZYt27dbO7cub7hZoRw5YoVttz90YgXFRXZmjVrfAji8GHD4+bJeZcuXepDpgf0H2B9+vbx+THqiJH\/iBEjbNYXsyw7J9u\/Z3tVVZXh9eEcAwcOZJNMBESgixLo1auXb2foNNKGYLQ9GNEntBd4jxHHGJ3N4cOHW15env8c\/sMrU+sG\/0aOHOk3rVq5ylasXGFjxowxPM50AEO+ifIIeelVBERABJpLIIjh4HGljxPaHdoePsfri9HOFRcX2+LFi30bxnnp040aPcq3ewvmL7Cq6ipfHAQ2\/SbaO96Xlpb6Pt2wocNs1apVvt+Vk5Pj9\/NKCDRGe0nbuMB5j9nG37pP1vk2lrYVhwrlw0KZeU9\/sX+\/\/r5tZpCSPmNubm5DvpRz+IjhxrlkIiAC6Umg03uGaXyx\/gP6+0aLxjTWaOgQrTRgjFjyyucQkliyYZ5J8YbXtWvX+ixonGkIu+d3j83Sb6ezScPOSCSdWDqsCGFGJ\/mj4aThpcFmO51ajGMod4\/C+hCdzTLXBhEQgS5FoKCgwLcXoY2g7aGTxYBadna2b6v6O+8FA3V02mi\/Yg0hzF+w6prqhs+0VXRGaavIg\/aHzqRMBERABNqSQJ8+9QN89IES9cVo95YtXeb7VTgf6D\/ldcvzn2mnaMto\/xDN+fn10TK0dQhhBCxiNTMr07droU\/IfvJFOJMG8Ut\/rM+G6W3kQ1vIYCRtamg7cYrQVrI\/9BeXLV9mhGFj5E++OEAoEyJ9+bLlbYlQeYuACHQwgU4vhgOfLOf5wNtLwxQVuuwP4pYGkYasV89e\/jDEKsKYRprtfMZjwivGK6OJCOKo8Zl9NJB0Yoe6eckY8\/dIX5Bf4P\/ozFZWVDZ4e1auXOnTEZ7DvmRCIP0B+k8ERCCtCfTe4JGgE0ani85Zj571g2W0NyOdRyPftTW0T7QxzHdryqLtFusc8JnzkAcdPc6h+cZNUdR+ERCBLSFAHyu0RYn6YvSdELO0SfSt+vfv7\/tV9M3Yhtjt64QnwpZ9wejTIWhDRE3YHl4Rz\/yRBqcE56EdpTx4cjmeAceo4RQJkTN4uGl7sbXr6p0kvCdPzkmZ6Mutr9DiW3CRiUC6EkiZMGnmBtNA0djieQ2jh9ELE+tNYaSQdHRAV6+qXx2auSOkIw8aYRrLeBYEcwgHIg0NLHnOm7\/R44L3mR8DOrB4e4JgD6Ol8fLWNhEQga5FgEX+6IARpRKELu0ZRlsUneLBwB3tSXON41hgJmq+Dcxuel5y9Bi9FwEREIFkCdBXou2JWry+GE4FoutwMvBH+4fXFsvLy40e3vA+Xj+vYad7k+8EcDD6YpSDhbKassyMjX4g+nVBzIfjovkyBY6+okwERCB9CaSMGA6XgLl0rC7NnI9goSEePXr0ZvM6WIrfi2HX4aQzSgO8fPlyI6wQC41xyCu8MspIWA3nwTvMKCPn4f2wYcNCsoZXRDU\/AAsXLvTbQke3IYHeiIAIdGkChDAzmEcIHmI3zEGjPaIjx9xfOmV+lemYzmVT4GibaN+iK+43dYz2i4AIiMCWEljhwo4x2jc8vVi8vhjbR40a5R0KrO7MIGDw2la3UGyWufOFp4nQX\/PCtpmLn9J2hj4kZcSiC7PG7qtPof9FQATSicDG4bEUqRWdRryuYaSOxq+woP7RSswXYZSSBhlhSiNGyAzHEF5NY40hdPlM5xGvbqxxHJ1VFsfC5s2t9wSzjTkszDmhQxvmnpAGMcx52E\/+oaPLPpkIiIAIhAEyOm1hKgdUol4J2hTm3UW3BXJsYx9h1nh86UyGdCEsmmek0zYhuhHZMhEQARFoLQK0N\/S9aINof1hFmmgX+jxE0TXWF8OxQLtEPwqnApbt+mDkSWQM\/bZ169Y1OCqSKfO6tet8W0i+HI+4ph+WnZXtyxXmCUfzCv2\/4L2m34g15YWO5qH3IiAC6UUg5TzD4CcUGdFJhzDTNaRhyX3m7M5xzx7GaGCZe0LDSONLQxk6oDTaQbT6xHH+QxBzLHNRaMTpZCKOafxZkZo\/LHRwOR\/50ign8jbHOY02iYAIdBECdNQYfEOsRtsIHr1Ex\/LTTz\/1JBikC0a7EqyfW3RmgYs8CdM0mMtWU1vjn1VMm0h7yIrV\/GGcLzr\/LuSjVxEQARFoKQHEcGiDaJ9wBNBPwhrri5WWlPoovbAIKuITr27oY7GKM0Z\/Ldn1Vlh4KzzWiXZz6JD69V0KCgv8uYgipK2NtqPMSw6DibS7GHUgXZge5zdu+I9jo8dH9+m9CIhAehDIcKJv08ke7VCv2AYnhMq0xqlp5DAa1LayROdgVURE97hx49R4thV85SsCnYxAaM+2pB1joavKqkrvYWmqerQxrEAdL\/qEfOggMpAXb39TeWu\/CIhA1yPQGm1YLLV4\/SS20UbxBI9YgUm7FpwXsXnFfqa8c5zjAwdFbk6ub\/Ni+3ychwjARO0y+ylPssI7tgz6LAIikHoEaDuibUIYTEtJz3Bj+GMbxMbStnRf7DmYkwxgVjKMHYVs6Tl0nAiIQNchkJWdZd2zNy4G01jNCfNLZOTDn0wEREAEOpJAbD+JsvhtCfwUjbVriepBlA3HxWvzmmoL2Z+vxQUTodV2EehSBNJODHfE1Vu5YqUfgaRRHjRoUEcUQecUAREQAREQAREQgS5BQOHLXeIyq5Ii0C4EJIZbAfPoMaNbIRdlIQIiIAIiIAIiIAIi0BgBwhzHjx\/fWBLtEwEREIGkCaTcatJJ10wJRUAEREAEREAEREAEREAEREAERCABAYnhBGC0WQREQAREQAREQAREQAREQAREIH0JSAyn77VVzURABERABERABERABERABERABBIQkBhOAEabRUAEREAEREAEREAEREAEREAE0peAxHD6XlvVTAREQAREQAREQAREQAREQAREIAGB7PCw9QT722VzZyhDu1RUJxEBEUhbAmrH0vbSqmIi0CUIqA3rEpdZlRQBEYghkD179uyYTfooAiIgAiIgAiIgAiIgAiIgAiIgAulDYMKECZtVJnv0aD0jdzMq2iACIiACIiACIiACIiACIiACIpDWBDRnOK0vryonAiIgAiIgAiIgAiIgAiIgAiIQj4DEcDwq2iYCIiACIiACIiACIiACIiACIpDWBCSG0\/ryqnIiIAIiIAIiIAIiIAIiIAIiIALxCEgMx6OibSIgAiIgAiIgAiIgAiIgAiIgAmlNQGI4rS+vKicCIiACIiACIiACIiACIiACIhCPgMRwPCraJgIiIAIiIAIiIAIiIAIiIAIikNYEJIbT+vKqciIgAiIgAiIgAiIgAiIgAiIgAvEISAzHo6JtIiACIiACIiACIiACIiACIiACaU1AYjitL68qJwIiIAIiIAIiIAIiIAIiIAIiEI+AxHA8KtomAiIgAiIgAiIgAiIgAiIgAiKQ1gQkhtP68qpyIiACIiACIiACIiACIiACIiAC8QhIDMejom0iIAIiIAIiIAIiIAIiIAIiIAJpTUBiOK0vryonAiIgAiIgAiIgAiIgAiIgAiIQj4DEcDwq2iYCIiACIiACIiACIiACIiACIpDWBCSG0\/ryqnIiIAIiIAIiIAIi0DUJ1NTU2OrVq62qsrJLAVhaXGdL3J8s\/QmUl5f7ezz9a9p2Ncxuu6yVswiIgAiIgAiIgAiIgAi0P4HHH3\/c3nzzzYYTDx482M466yzLysqyp59+2iZNmmQDBw5s2B\/7Ztq0aYaY3nXXXWN3bfHnG\/5baZc+st5qnV7tl59p\/zk733YdmmlPf1JjJ\/yl1KpqzXYYkmWv\/LDAuuWYIW6\/ekOZzVtdYz1zzZ5z23cYnLVZOaYtrLUjbimzleUuA2fZzuV168n5dsrkbFtdXmdjrii2Ny8otLH9631h\/\/NQhd3+aoXdeWq+nbRT60kC2P3nP\/\/ZrHwZGRn2ta99zV5++WW74oor\/LXYLFErbahzbM\/7z3r762v1AyHf\/FKu3X58N2OI4Mi\/lNvzH1f5M910Yr59d\/eNdS93m0dfUWKv\/Di\/gVMrFalVs6lzFbzttttswYIFDflO2mmSHXvcsfbOO+\/YI4880qaM\/\/RqpV375Hqbf01Pf5\/d9ma1\/eT+Mn9P7zQ0y146r\/7eDYV7d1GtfeV3Jfbezzbef2HfhY9V2I0vVYSPlplhdskheXbp\/nkN29ryTbt4hl944QWbM2dOW9ajVfKurqq2NWvWGK9bajNmzLAPPvhgs2zIe+XKlZttb+0N69abrXENn2xTArB\/\/bXXrba2\/odi0736JAIiIAIiIAIikOoE5s+b74Xw\/vvvb5dccol985vftCVLlti9997rq4ZYQ5g1Zh9++KEVFxc3lqRF+z5fWWsXP7zefn98vi2+poftODzLvvPPcitxWuDUu0rtnH3ybNaVPWzBqjr7zr3lhqg7+i9lVpTvRPGvetpe43PsyFvLrTqmG0O+e\/2+xCYOy7TPft7DZv+ih31vrzw743\/L7MmPa3xZayLdwjPvW98mQpgTTZgwwU4\/\/XT73ve+Z926dbN+\/frZOeecY6eddpptt912duSRR7apEKYMN\/1fpf39jUqbcn6BvfDDQvvfNyvt+Zk1du0LFfbqzCqbcVmh\/fqobvbD+8ps4dp6MG8vqLURl62ztRW1ltkuComStsyee\/Y5W7hwob+3ucf3228\/e\/e9d+29d9+zEcNHtCnj6Utq7aKH1lteTj0k7r0fOY6\/Pa6bv+\/mrayzcx5wQmSD1bh79es3l\/lP8bgWV9TZzsOzbZoTylyv8w\/Ms6ufrLAPF8fc5CHDVn7dOBQSyZjRhgsvvNDefffdhq1jxoyx888\/33htjpHXHXfcYWeeeaaNHDmyOYe2W9rFixf7RpNQg2A9evSwww47zH0ZWvZtWLRoka1fv9522GGHkKV\/\/fiTj+2jjz6y44873rJz4uLfJH0yHxjF2vrn6+zHB+TZfuNy7ETXaC5aV38DDe6ZaU+ck2\/j3Sjg5OtKbbJrdP96Urdksm3XNC+++KJVVFTYIYcc0nDekuISe+zxx\/wXfMCAAQ3bt+TN0qVLbe68ubbbbru1+Nomc\/7oNblo3zz\/Y8YIJQ3zexcX2ui+G+8rfuhi9xHeNOGXxXbzSfl2shvR7SzG9\/nhhx+26HcllI3vynHHHtfs+3rt2rUuhK3K+vXvF7LSqwiIgAiIgAi0mMDqNau92KXvkJ+fb9tss40dddRRVlJS4j2WZWVlduONN9q5557rHRQPPvigVbpQagTynnvuaXiRP\/vsM\/\/XvVt3m\/LWFL8dL\/FnMz+zhx952H7yk5\/Yp59+av\/+97+9BzkvL8+OO+44LwR\/97vf+X7GXnvttVkdKlyf7dQv59oZu2VblusKnLlnjp32tzJ7bma1Vbqu2xUH5Vl35w2+4cRudrY0zfIeAAA1DUlEQVQTsgvWdrOPFtbYSz8utJ6u+3aTExxjf1Fss50ACR5eTnL9i5U2pFeWPXlmvs+Xbb8\/Ms+mL6qxi5z4fumHTk0769ktwxDCd0+ptP+cWWCHbLO5h9kn3IL\/unfv3qAXcnNzjT41TDGcRa+88orfjz7Iycmx5cuXW1FRkd\/29ttv++vAQMbee+\/tBzHuvPNO45plZ2fbMccc4\/vWOJweffRRu\/jiizcT1vSrbnu1yn59TDfrW+AgZ9TZFOcRH9Yrw865t9r+x3kct+6TaeftlWu\/fbbSnvm0xk7fNdtO+mu5fWlsjr2wwWsci4B0lz663kqczpvrvPSHbZ9j+c5Tf\/87VQ0e++0HZdnxfyu3Jz6s9zyfsHOO3XlS94ZrEptnSz9zj8Nj0KBB\/h7H415aWmo9evawZcuXNTD+wx\/+4PqgdT4tkQ5jx461U045xfflYI1tvfXWfvCCqInG7l3SImwPvLHMRvTOsvVV9YMIPXIz7OZv5Nu3HUPGmMYPzrTlJfX7OOYb\/yi3nA23WTxfFBESW7lrM2FAfd94WO9Md10q\/AARx7e1beyRx5yJG5MRnfvuu89uvfVWP7Lzs5\/9rEUeNRoibvbOaKtWrfLhGjXV1falL33JC2BCZ4YPG75FYglhEG\/UcfTo0bbz5J2bLRgaY3flMxXG+OaP986zN2ZX2w7Dsmy6G\/H65PIe7ubLsEsfd\/tdgj+4BvRfUyvts+XtM9LSWJnj7UvkreVL3FrGjxWWQQxGG1r0miwrrbMdfl3qQ3X4wkct0b6tergfK3c9z7u3zCrrB3Sjh3XYe+7pPfbYw3cKdtl5F1+OHXfc0f9gfeUrX2nRfT3lzSk2Z+6cDquTTiwCIiACIpBeBLbffnsfAv2vf\/3LLr\/8cvvzn\/\/sxcBXv\/pVO\/jggw2xdvzxxxti+f777zfSX3311f637fXXX7eJEyfasGHDbOedd7Yv7\/FlL8QQY9i64nVeVPOeweHx48f7Y4cMGWIci3F8EH9+Q+S\/iVtl2m0uXBchTATfmU7wHuxEVbecDHNdtgbRUOgEBpbnus90WQiP9p\/d+DjpokY36bXPamyXrTM3E13f2SPXFjnhhojhMLzM\/3Re0pN2zW0TIRwtF+9j+3A4ihgEZ\/u6deu8CD7vvPO8kMMbzwAFgxevvfaaj9S8\/fbbbfjw4Z4x\/QyuF84Srt1OO+0Ut6\/NeWF2vvNOjnEDB7tfX2In3VluedkZvj+MkMPg0X0DZ9LP\/HmBPfDt7obDM5Fom764xjufnjinwAve1e62oM\/dr0eW3fBKlT3tBPOz06vs48sLbeqFhfboe1U2yw1ctLZxH8Pw+uuvt1\/+8pf2z3\/+09+v6IzAuLCw0L77ne96r\/wuu+xi1U7rjBwxwgtlQqnReXiVcQo+8MADvoiN3bsk+M495Ta0jxO\/zrFWvL6+XgNdn\/U7bnDnlVk1VvDTdfbGF9X2y8Pq+9t3T6u25xyPp3+Qb90SjLt0d\/f+Ux9V2fbXlvq\/oZcV+4Gd3YYnlKmtijOhywnAI0eOtD59+vg\/5llccMEFDTc1oaZXXX2VVVU5j44Lf6ARCV7jmZ\/OtJ\/89Cf+YhAqAeRM14l+7LHH7PnnnzdGKYLH9brrrrPeRb3te2d+r1Urlmxm7733nk96+BFHWBBKvXr1ajicUJspU960SldPjBGVMH+EhhGPJl9mjC\/mvvvu21A3v9H9t2zZMp9u2NChtpUbwZnx8QwbPWa0H8l6\/733bfqM6T5pQUGBMRLGKw0CHuTQiAx1x9KIxxoeyLvcfI+fHdrNct1NxijXeZGByEN2yLbPl9XfrHuPyrLR\/bLsty9X+oY4Nq+O\/hzuiVCOWM85vLl\/GNnFxo0bZ3y5sVdffdWHiyCoyYeBDe5f+D3zzDPGoAfGwEx0kGLu3Lk+KoDRMkbEdt99d3\/cF1984a9Bz549\/ahk7969jWvQkmtS5\/CPdz9+j7s5QZOvLd6kgW1s34\/3zrU\/v1xhj8+otmO2T\/hV9fVqz\/\/CHCt+jDKmZfhRSdqJYM25p7Ozsm3FyhW2ctVKmzlzpg+f4vokwzmcT68iIAIiIAIiECXA78gPfvADow\/3\/gfv2yeffOKdO3gTCZnGo9a\/f3\/fXzj77LP9foTzvHnzDE8mRl+MPkCsRZ07ffv29Z7OG264wXsrGSzGECpN2fw1LjTU9Qn698yyv5\/S3V5wYpYB89hB86byCfsTjfH3zEPy1Rtp8DKf7Qbbb32lwo7ZMccOnZBAoYSDWvkV9lE77NDDfGQY4dT0sfF0InLpEzDwgM5gilvwDtOvI8qSvvjXv\/71aFabvIcj865f\/3GBEYY77spiu+fd+mmQFYwMxDF321hpZYzXIiZdvis+Xn3yRDRf5LzMo5yXef9ts23WilrbqmeGn\/O9269L7Jhdcu2pH2w+RzYmyxZ9RKtceeWVNn36dN9n4h6\/+eabPRP6usGGDR\/m5xUzUEMfd083oHD33Xf73S+99JLvJ8OYfi996Mbu3Yc\/qrb\/vFtln1\/Rw6bMq\/fURO\/Xsf0y7cHvFXjv+al\/L7dHz8q37\/+rzP52Wr4hmIl8iOfgqah2mrNPlp3rpghUuvj\/qXMz7YFpVfYvd72+tfOm90uoV2u+JpTcNCSEMsyaNctwo\/\/mN78xwj0QGoSI\/PyKn9sZ3z3Dh4fw5afRYaSn2AlDhDCikFEGxAqQMd5z0WbPnu0\/k5YLsfMuO\/vP7f0fXyjmCPft07dBCEfLQLjB\/732f9bd3VSI1FGjRvmQGerAsc8995wfLSSkBm8y3vSXX365IQtYIbIQzIzO7OHSEQocQkyZR40QJl+ELvOJEXu8cg5GFQ866CDbdsK2RoMbzz53X7xS990+3H0JY40b9PH3qq3HhqhovuSHOXH8zIfVm801iT22Iz4zksWXkfuOPxpCOGOBN6NahM0w8ML+cC+RZpvx29iBBxzoBS8h\/hxDKA5CePLkyX7El3ME0c37N954ww\/GcH0ZlOEz14h7FvG9yjXAHMugTkuvCQ0AI42EN0Xn61DmRvcVZtjIvll2v2t4OrOF7zdlbO49vc2Ebfz1CIM9jP4my7kzM1HZREAEREAEOo4Aiwf99a9\/NYQAgolpfgcccIDvN4R1Yejn8nvPIkQMqCPSRo4c6fttoeSkiTUGzoN959vf9uHXBfkFvj\/7+9\/\/PqkIype\/qLFtrnIeyzE59sHFBd6ZUeU6CPR4gkey0n2mH0dYNVYeWc4mti9BMXcekWVvz671HuD6I+r\/v9XNnR3sPKF4olmYi3DrP7jw6QO3zbFv\/LXUTaur72dFj2nP99U19RWjvxz6uryP2hDXH6ZPjMcYERwdgI+mi74vdl73U7+c4+vdy4WGb1VUf93oVpZuXKvJ8a1zbOOL42h+0fcQ44\/BhRG96++R9U7QYZNciPBbLiT7LCfsXnFe4q\/9scQe+CBy8XyqLf\/vT3\/6k7\/n8OSeeOKJfrEs5gqH0OdwhhXLVxjedSIYDj\/88LDZD\/qMcF5iBh9wINHXbcoecfUA1Ui3ENuJfy2zMlct5ljPcnOE73yr2ga7gYCDXdj9LSd2t7kra+yNOVX+njvlrjIbfGmxP3Y356WPjVDlPp\/guJ395Wz7oXPq\/fOb3W3CVll2rws\/bw9LKIYZcWDkgLm+hEezWhkjCjQM\/331v178sWIZNy5CmFEIRtxmO4GHCDnPbSP+\/9RTT7UB\/Qe4L3SdbbXVVj505Mknn\/R1e2vqVN8R3mH7TefVtkfFwzlq3Rcu0VxFvIYYQgmvLzcLo4R0+BH+iCWYcDMhlhBozEkNDS0i4eGHHvZC+NBDD\/XsghAjXwYacl34OB7ObnndbMjQIT7Pmtoan5ZzIP52mrST58YxsTZ7Va0fmRrca\/NL+T9ucvvS4hr77ZEb1LA7eJ8xbjRrQ1hDbF4d+RkuDBJMmTLF8Nbzh3cQ454rLSn1bGAdfrA4JixGxkDN+G3G+\/R8sRG61Y7\/CjdAMcIJLBpQjmUOd2hkuY6Mgo0bP87fs2PGjvGvK1as8Pnw375uQQKORaRRji29Jg0ZJ\/GGH7c9x2a125yJJIrUZJLm3tN43LNdx4IReAQx369kOTdZGCUQAREQARHokgToBzBY\/tRTT\/mQWiL06FfgmMh0qpB+wIcffOj7FfSzTj\/tdDvhhBP8dvbRf6Mvy6B7MBYrwhAb9D\/oP\/7q2mt99B\/RjfQV6XtwHCGoLNgVz\/AIH\/HnUps0LNtuPaGbfeFCaGe66WtfddF7yKo\/v17pRfCVborbzltn21A3l3K485pd4lbcxX7+VIUPkx5atGm\/75IDct1CUDV2tAsHXlnmBJ7TET95pMKenVFlvzw8z4tCxFsIt773tO6W70KwD\/tz2WYC2p+oE\/yHt5jBh0z3h8eSvjj82YbIe+utt+KWkv7Twc75c\/Vj630o+oyltTZ\/VY11y661o906LL97Zr3n86iLvFtWWmtfHrG5QyluxnE2hnmzYddfp1T7hcwucR7jjy4psD7dM21pSfPEdsirsVc0Fs42FoPDeUdU7sJFC33EQziuzG2\/6eabfN\/q2GOP9X1YnIAcyz3ONDecbsx9xxnFfd3YvftHNweb8G8WZ7vhhHzLc+ML717Sw88PPtdN63vKrYbubn\/7rVsZuq9bJf3o7XJ9ehaEY2EsVjd\/3IWXR+e6U1buy6VuETM0Dd8FQqs\/XVpjI1w4dntYwqsPLJY9D5P\/33j9De8N3m7idr6zSuc1GJ3XEErCDUq4cZYbYQuWm1cfckK6k046ya666io724Vds+z6UUce1aJ5hiHv1njlCxXPuCmwrMyNo4A0pNx0hHdiIbSa97161odXMx+VY0M4LyI35EW6YGwj\/Jol\/oOxDZGNp5hQdFbipjFAdDMfJZ7luziNvI24fZKrn6uwv7jRwIfc4giM1HR2Q5QyAMOiZcHCAlr8sATjC8tfMFZ6jIZPc4\/xx32YkVF\/\/fDsB4t3HcIcn5CGe7\/++AxfJrZz3JZek5B\/Or82956OnVPVXM7pzFJ1EwEREAERaBkBFslkIVPmnfKH4bQ544wz\/O85jpxX\/vuK5XXL81P9brv9Np8GkUCfg+l9CGqi\/fAwEwFINOBll13m86GPgEAjUo2IvtCPYE4r+3D6EDWJEyjWHnILK+GhfWdetZ\/Pyv6iPLcg09U97U9uEaIz7y6zS9xjlwa4hZ+eOoepXWb\/ctFle7uVorv\/pMoLB0JRWWQraggMVk0+7vYyY84lhsi445R8J0rqH60UTc\/xD59d6D2XlzmBfe2GOZ7RNK3xHgcGTKIWry9GuqiRhj42c7tZBRzRh+3kBNzIkSO9aOPxWczrjs2fdDe4laI\/cqtDD3IeSeyYSTluQdJcO8b5356ZXm19Lqqf4vgTJ1onD9k4sECPOXZOts9gw395KDpnselgnZdV5xc9\/dNLWQ35j3IRfse5OeGtbd\/61rd8VEP0EVb0qVjEjQg7+H3qBnMY7KFfe8011\/gioCl+dlG9k5NIBgzOOD+xxu5dIhx7dquv\/0jnEe\/uLlm\/Aud1dxGQZ3wl1469o9TnQfj4c+cVuvnYzoucW5++m9vI26FxNEkPF8r\/tvs+bHt1\/TRIMmFxsj858d0etumd18gZJ+882Xvklixd4kcToqGRHIZAZDSNP1bkiwqYaLY7Ozc8N\/yTbrRujvPMcUE6yhBNhW6Fu1WrV\/kHsufk1ov2UB4EGlbHxM4NhvDC8N5SR+obbH2FW17OWZ3z93MsAwbMr8RbxuvWW28dkvrXkIYl5uMZnndGIvGWMvrFSoiUOdZKXBB+iZu7UNS9ft\/1L1XaNa5hQwgTrhA1wnBS0QJvfpDw8EaNHyvuP4Q0gpo5q8wnCUZDECxzg0DmM\/zheZwbLYu99sy9iDV+GFt6TWLzSvYzoSOpZM29p7n3iRqJWnM4R4\/TexEQAREQAREIBOgz8bd69WofEhp14rAODtFoLKTFQDdRX\/nufbQvQJ9tb7cvbEPoMgCPYA62zz77eKcRa8cQ6RSMRbsSGWGg\/MUz5keesFNPW+UW3hwUEQ3buXVHVl7X0\/Aq4ymO0xX02X1pRKYtuKbQP5eYX1ZESrDero+45vqe4aN\/JX357zfdtkmCVvjw05\/+dJNciNALT1ph4adgPMUmWDQNYcA40biOha5fHa4HIpi\/RIbYf809K5hnNOMwCn1ktr\/\/swLjqR2ET8cOKpAO1vGMlbcX\/arQ74pN92e3SG0w8o89b9jXWq\/0X5nvjg7h\/ouyifILa+vEnjd8B5gqEL2nG7t3o3kcND7LFl+7kdONTrj++utuUS2nR6L3XTiG+y8R1+tc5AJ\/HWX1cj3O2YHMHFhuPkbXWIIe8UfjAFjEWYhLZ2EsGhLi0QcPGuzFMNtIj0eZEGsW0MK4iekAkx8r9eE17Uhjri8d+EcffcwIi0ZUEVqDUA8jeq+7eaTUBYHE6Arb8YQT4gwDBDLhusxzZXtY+AnRH0KrefA7N1zUEMicb6oLF2cfwpcwhyo3mECYAufCG8zciBCyEz2e9ywNj74NS5j\/0T3I\/ecuLORH+7kJ\/X0zbMpcNxHdjYyFtQJemFnj5hAnvOyx2Xeaz3BlNIuRQULRYc7IF\/POoyOCePk\/nfmpHxHDQ89gB4MRbIc1c7RD+uBpf\/nlV3wYFbwJzeZ+iLUtuSaxeSX7GY3I6pBhzneyx3Vkuube05SV0fr58+f7Bp3vQbL3fkfWU+cWAREQARFIDQKI1KgQDqVGCAdjID2IrLCN1+g2+g5R0RDSsT0qhMP2lr4SehoVwtF8hhUlFsLRdKxHEk+QRNOk2nsYR69HsuWHRRDC0WPgEyuEo\/u39H2i825pvrHHh\/uvJWz4DsS7p2PPkeznAjfGk4r3XULPMA3DLbfc4v+AwIrRrPxMg8JIzNlnne3nErMPVzyjO3h0sIsuusiudfMobrrpJj8\/A8FZFfHOHXH4ET7k4dhjjvXH+oM66D8674SyvO0EaQiloSj9+\/W3Aw48wMfTv\/\/++3bPPff4ElJHJpkzWMB8UsJjWFofg82BboGGWGPRhoceesiHPLNYFsdijHatXbO24Vl2bKM8DBDwfLtoODAr68ULK9l2YKb1cDff3W7VtSvcQ6rver1+svkN7qHi\/GGEbrznHmQ92q3y9qSb\/H6om0exIcrD7+8s\/8WrH2WDF388Q+3FF170HEOZCQlhEIaBhCeeeMJvRjiv3\/DMaML8WU362eeebdhX60YG8N5zj3NvstjWo4896vczwMH8byxcJ94Tzt6Sa3LlQZuPdLmvS0KL7lvA\/Am3AMFvjt442pjwwE6yoyX3NPOxGYTgWY3Mu2fwIpl7v5NUWcUQAREQAREQAREQARFIUQIZzhOzaYxiMyqCa57J2XjfosKBLBrbhweVh5UzB6A1RySaUfS4SfFu4wEuLChs8O6GhOzDMxmdIxz24XHE4o08hjSNvbLgVkVlhQ8fj+ZPvniEm2J0xTMV9sfnK2zJr5z31IV\/JDImth\/n4vk\/uMQJ476NKLJEGXSS7Yl4N3aN2IenPtE1Ik\/u4ehy9PGq29rXJN45wrb\/eajC7p9aZfOudvdjil2u5t7TIX24PslyDqz0KgIiIAIiIAIiIAIiIAKNEQiPTiNNeCLNFonhxk4Wbx+hxIS4sgABS6NffPHF8ZJpWzMJEAI98ZpSO+urOcazaeMZIbdf\/kOp7TnGraJ3xObeynjHaFvLCSRzTRrLnbkmO1xTbHedVtDuzwBsrFzaJwIiIAIiIAIiIAIiIAKpSKDDxTChwjwQep999vELZ4W5takIU2UWAREQAREQAREQAREQAREQARFIDQIdLoZTA5NKKQIiIAIiIAIiIAIiIAIiIAIikE4E4onhFJuJmE6XQ3URAREQAREQAREQAREQAREQARHoKAISwx1FXucVAREQAREQAREQAREQAREQARHoMAISwx2GXicWAREQAREQAREQAREQAREQARHoKAISwx1FXucVAREQAREQAREQAREQAREQARHoMAISwx2GXicWAREQAREQAREQAREQAREQARHoKAISwx1FXucVAREQAREQAREQAREQAREQARHoMALZFeeO77CTt8aJ827+tDWyUR4iIAIiIAIiIAIiIAIiIAIiIAJdiIA8w13oYquqIiACIiACIiACIiACIiACIiAC9QQkhnUniIAIiIAIiIAIiIAIiIAIiIAIdDkCGTNmzKjrcrVWhUVABERABERABERABERABERABLoMgQkTJjTUdfbs2f59Rp2zhq16IwIiIAIiIAIiIAIiIAIiIAIiIAJpTCCIYYVJp\/FFVtVEQAREQAREQAREQAREQAREQATiE5AYjs9FW0VABERABERABERABERABERABNKYgMRwGl9cVU0EREAEREAEREAEREAEREAERCA+AYnh+Fy0VQREQAREQAREQAREQAREQAREII0JSAyn8cVV1URABERABERABERABERABERABOITkBiOz0VbRUAEREAEREAEREAEREAEREAE0piAxHAaX1xVTQREQAREQAREQAREQAREQAREID4BieH4XLRVBERABERABERABERABERABEQgjQlIDKfxxVXVREAEREAEREAEREAEREAEREAE4hPIZvPKFStszZq1VlVdFT+VtopAmhHIyc6xoqJe1rdfv6RrVldXZ+Vl5VZZVWm8l5nl5eZZ9\/zulpGRkRSO9mbY3PIlVQklEgEREAEREAEREAERSAsC2QjhdcXF1qNnD8vJyUmLSqkSItAUgaqqKn\/fky5ZQVxSUmLV1dVNZd2l9ldUVriBgVorKCxMqt7tzbC55UuqEkokAiIgAiIgAiIgAiKQFgQy8QgXFBRICKfF5VQlkiXAwA\/3Pfd\/siYhHJ9UVTMGCDqCYXPKF7+G2ioCIiACIiACIiACIpCOBDIJjZZHOB0vrerUFAHue00NaIpS0\/s7e8h4Zy9f04SVQgREQAREQAREQAREoC0IaAGttqCqPEVABERABERABERABERABERABDo1AYnhTn15VDgREAEREAEREAEREAEREAEREIG2IOBXk26LjJWnCIiACIiACIiACIiACIiACIhAxxG4\/\/77m3XybSdsaxO3m9isY5pKvGzZMps7Z64tX7HcysrKfPJevXpZ\/\/79bdzYcZZfkN9UFm22X2K4zdAqYxEQgWQJZF84OdmkcdNVXzct7nZtFAEREAEREAEREAER6BgClZWV9v5779vceXM3K8DatWuNvzlz5ti2225r48aN2yxNe2yQGG4PyjqHCIiACIiACIiACIiACIiACHQQgeOPP77RM0\/\/aLrN+HhGo2masxMh\/Morr3jBy3E9e\/a0kSNHWlFRkc9m4cKFtnjxYu8p\/uCDD2yte8LLrrvt2pxTtEpaieFWwahMREAEtoSAPLtbQk\/HioAIiIAIiIAIiEByBJoSvQjiWFHclJCOd2Y8wnh+sV122cUL4Wi6AQMG2MSJExs8x3iPBw0eZEOHDo0ma\/P3WkCrzRHrBPEIVFVV2erVq+PtSsttPF+XBoFRsni2bt0698zjNfF2aZsIiIAIiIAIiIAIiIAIpAwBP0d4Q2j0DjvssJkQDhXJzc313uBBgwb5TW+\/\/XbCvnI4prVft9gzXFdbZz+\/4ueGexvLyMiwww8\/3L59+umWmZXV7PLOnz\/fhg4ZahmZGf7YJUuWWO\/evS0vL6\/ZebXHAV988YV99NFHDafKcnUeM2aMbbPNNg3bUu1NaWmpvfDCCxZ9PuuwYcNs8uQtm9cZ5QC3mTNn2iGHHJJ2z7n+9NNP7aGHHrKzzz7bh4I8+uijNn369IbqEyZy1llnWXZ2ts2dO9enLS8vb9g\/aadJdvAhBzd8vuWWWywzM9PnFzaWlJQY28\/47hnWp2+fsLnJ11mzZhnXsrFnizNQwfdw1KhRTeanBCIgAiIgAiIgAiIgAqlHIJmFspq7+FagwGJZGH3eZOYC77rrrkZ\/GefRokWLEornkH9rvm6xGKYwK1eutNNOO8322Xsfmz5juv3xj3+0mpoaO\/PMM5tVVkTYBRdcYP+6+27LsCxDaF966aV2\/XXXd1oxTAUZANhtt92sprrGPv\/ic0MMMcLBKmmpbBO3nWiFPQr9xHbEUffu3W3ChAmtUqURw0cYo0GNibJWOVEHZMIXGauoqPD3AkJ476\/ubdtO3NZWLF9hixYv8kJ46dKlds8993jB\/I1vfMN69exlb019y15\/\/XUrX19uRx99tM+H7xJe5VdffdX22msvv43\/GKyoqq5q+NzUG4Tw7Nmzbfny5X5gIx57hPC0adMMsY1JEDdFVftFQAREQAREQAREQASiBFg1Ghvp5ggnY2gCtBNziIkcTfa4ZPJuKk2riGE65VQADxWddbxdCxYs8GL2V9f+yq8Q9vjjj9uqVavsjjvusIr1FXbpZZf6yvbt29euuOIKfzzeMjxkJ59yig0ePNiIJV+xYoWdc873Xae\/2iZNmmSjth7l9p\/s60XI6bnnnmvf\/\/73W9Vr2RS02P2I4X79+nmBM2DgAHvqqads+bLlXjwibEK8PGJyzz33tMWLFttnn820\/Q84wIvBqVOnGuEEB7jP3AzvvfuuW3p8he23774t8q7Hlq+ln\/v17+eF2sABA+3Jp570ozUMWLz631etb7++\/obFE37ggQf6+k57d5ofBGHbjjvuaLW1tfb+++\/b3nvv3TAwQN2WLFlq47cZb59\/\/rkNHz7cc5sxY4Zj8pkvan5+vu2xxx4pwykRX+6L9eXrvVd3t9138\/Vk0YAxY8f4Q5599ll\/vc844wy\/j42wwt544w0vSAsLCw2eW221lb322mu2\/fbbNyw84BM24z88wghhhC6CF09\/VBBHhTDnJX17WUtWk67rlm91W+9gdUf8zOr6Dm+vouo8IiACIiACIiACIiACjRAIj08Ki2U1krRhV1GvIq8tWEirPa3V5gyHTjXeXEQOog5jLuTf\/vY3O+KII+y631xndLLPv+B8L3buuvMu23333b03mLSnnnqq9wBff\/31duGFF9qxxxzrva6XXHKp3XDDDV5IPvzIww2x5ITZIrAJS+5IYzAg0wkfjLAAPhf1LrKc7Bz\/R6w8nmM8hYRU422tdB44yg6vFU6g4E1kVTVsmftMWHhLwsx9Bq30HyIMq6yq9MIWcRc+E8IwduxY22677bwAfmfaOz4UArFPSMS7TvQy0MExc2bP8cdR1wWujuzHi75+\/Xq\/Ha8zQhjxBadqx4ZBhILCgpTg5CuR4D\/qxP1w2223GaHhUSOiYqQbMSNcOmo777yz58bAA8zwDBNOzneqpeEq5M93FAHMdzAIYgQwFiuEY4WyT9TJ\/stYX2aZH79pmX882TJWzutkpVNxREAEREAEREAEREAEOjuBTXvhLSxtt27d7N5777UpU6bYf\/\/7Xy\/6CG3G8N4edNBBduSRR\/rPH3\/8sRdBbKutq7X999\/fe1IRBngJEZVDnFcYIdijRw8vAIaPGO69Yf369rNbb73Vz09mVbKnn37aiDFHXHWkIXaedN5gDOGCFw9PMbbnV\/a04uJiq6qs8uVkpGSAe8A0c0Dx0iFwEMYIIrzpiCdE4ujRo\/3xHfnfW2+95U+PcKK8W2+9dUNxiP8PIdOIPLzA7IcFAg8xzHF9+9R7kBkQIPQBPqNGjzKEXrD58+b7+hOSW1tTawMdP1j06dMnJTiFesR7JVrihBNO8PMg7rvvPj\/IgbAN7BrzvkbnEXN\/EDbN94zFBRiEaIkFQRxCoXnFi48Hn+uFUO4IIdyS1aQzytZa5rN\/sozXH7LMR39tNd++pSVIdIwIiIAIiIAIiIAIiEArEkCb4RDF0UekbzK2cFG9U7BXUftOM20VMRwqiDcT7y6hnnSq8Woh7AhvjhrC6Yc\/\/GHDJryHhBXn5OY0bIu+CXMwu+d3t3322ccLi8kuT8KLL7n4kmjSDnlP+fGSIva48KG+ixYusmjoMEKQcAGEPnwIAWewgPBpRBGiEo8rhqDuaEMAI8IQqRPdw7ApdxCxQexHy4iwilrxumIvjKe+PdWKS4pt3vx5lpebZ4Rdz5o9qyFpZlam94zzLLJgnJt7JxU4hTIneoXfj370I1u4YKE98ugj9sgjjzSEIOMVZ0AnatzvDCpwXwRjG4MNREGwuNmIESO89zjsb85rrCAm\/BrrKCHcnLJH09bl97Kaoy637Fnvms2uX8Avul\/vRUAEREAEREAEREAE2p9Af+f4QxOhjXh8UogYTlQSnqhCeoxj29NaRQwjWr773e\/6Z0g1VXgEIaL5brdIVgitDsdEV2VmG6KZ9FH7+te\/bj\/+8Y\/tiSef9IKBRYk60hD8Xgw7kYJYeeaZZ2zqW1N9GDgrbFPXMPf3pZde8nWivIhdwskRl7xHMBEqzB\/H5HfP78hq+XMTrpuM1z0wOPjggze72dmHoCYiAPHvRdyGlcJDBfEGM0+YOdOxlgqcYsuc6POQoUP8YNFNN93kvbAMCsyZM8cPBMAoGF51rKCgIGxqeD32mGPsd7\/\/vT3wwAMN91LDzma8iRXEqSKEs+65yGpO+s1mNc3YbIs2iIAIiIAIiIAIiIAIdASB8ePG+zWkiIjlecO77rap4ydaJhyDODgx9EDKPmc4zD2MVi7ee8QQIvfvf\/+7F4KEEAOp1ole5piWO2H9xRez\/BzGAgcE7xiLCYX8eewSXtS\/\/OUvfh5yrKCOd8623MYjoPDi1bo\/Rj1GuhDhFSvdisHOw4vHMxir+FJXhDM2ZMgQfxweP5jk5uQa4eY+tJi5tjGCMeTTnq\/McU7GWDQMI0wecc\/IDitqc02pB2HvPCKL647ojzVGgPiyfPD+B95TTlpWPsZSgVNsfaKfqRNcGAhgITUWzcIQn\/vut6+v71133WWsLE1jgHf8zTff9IvOkSbW8M4fdOBBDc8kDvdTbLpkPgdBzOJ3HREanUwZo2kQwhnvPhfdZFkPX2W2ZI5fSGuTHfogAiIgAiIgAiIgAiLQIQTyC\/J9X5aTz3XPGyYKkX5urOERpu8bFhvuiCfxbHRHxZauGZ\/pkCfqlMduZx7w1Vdf7VeQfuyxx\/xZEDw33XijC58d4OdCssBW\/3797fbbbzM8wQjfO++8069ETXju8ccdb9ddf519bZ+vNaOUbZc0WsftJm7nhfCMj2f4OdCIwsfcStoYox0hbY\/CHt4DzPY+7jnKiMatBm5ls+fM9gKQ7R1toaxNlQPvMSEQPELo+eef98nxdDLvmeGAUe51ngsHJl3U2xnyHzturK0rXufrTv0x5ocjnFOBky9w5L9QLzYtXrLYr9z84osv+hTsY\/VthC5\/J510kn\/OMPd3sNjnDIft4XWHHXfwC7ERdp6dtWVfYQTxti4EvqMt0WrSYS5xVAhvltatKl174rUdXQWdXwREQAREQAREQAQ6LYGwCGt7RZ+yvhArQyOGCZfmOcI4YHo73YMxnziI4ACNdETYNuZJDmlb6zXDha\/WDRw4sLXya1Y+hFdjeESjhgeVUOEQXx6b7sEHH\/TzJhHQeMo6s+HRZiEkRF1n8Pa2NSs8w5kZmcb87uYarBg1QqCFa9\/cPJqbHo\/sNttsk9RhPPcsGQve3Z\/+9Kc+RJxjysvK\/arciUa88KbjOW\/OEvTJlKW90oSGranzJWK4mcDdkFEQw5lv3W+ZD8QI3qL+ziO8k9UeeYkxf7gxS7Z8jeWhfSIgAiIgAiIgAiKQagSCCA7lRgyXlZfZthO2tYnbTQyb476GY48\/\/vi4+5PZyKK4LP4a1oCKPQZnIU60MGeY\/SOGj2hzQUzULrZlbiWfRcv\/ixXBISe8x1EL6ViAaNHiRfaPf\/zDLrzgwk4vhKkDwo6\/rmJRz29z65zqrAiJfuLJJ3y1EdjRecAMDvAvkSUzNzvRsemwPYjeRHWp3a2+EUYQN5U2UR7aLgIiIAIiIAIiIAJdjUCskJ3+0XQjgrW9jDnArCjNFFKcIuE5wqwazVRJ9uMMe\/nllxsEMd5krD08xB0qhptzEViI6c677rR33nnHTj75ZL9AVXOOV1oRaGsCLObGvPfcvNx2XwmvrevWGfIPgrgzlEVlEAEREAEREAEREIFUJoAgbi9RHNZVYm2leMZ+nhgUFcT9B\/SPl7TVt6WMGCbE+PLLL291AMpQBFqLAJ5gVoyWtR0BCeK2Y6ucRUAEREAEREAERKCjCEQFMfONEwnn1i5fyojh1q648hMBERABERABERABERABERCBrkSAecJNzRXuKB4IYhaabU\/b+Oyf9jyrziUCIiACIiACIiACIiACIiACIiACHUhAYrgD4evUIiACIiACIiACIiACIiACIiACHUMgMyc7x3ikjUwEuhoB7nvuf5kIiIAIiIAIiIAIiIAIiEDXI5BZ5Ja15tmwEsRd7+J35Rpzv3Pfc\/8na9FHJSV7TFdIl9uMR4d1BMPmlK8rXC\/VUQREQAREQAREQAREoJ5Adt9+\/fy7NWvWWlW1PMS6MboGATzCCOFw\/ydT68LCQispKUn40PBk8ki3NAjN\/IKCpKvV3gybW76kK6KEIiACIiACIiACIiACKU8go85ZytdCFRABERABERABERABERABERABERCBJAjMnj3bp9ICWknAUhIREAEREAEREAEREAEREAEREIH0IiAxnF7XU7URAREQAREQAREQAREQAREQARFIgoDEcBKQlEQEREAEREAEREAEREAEREAERCC9CEgMp9f1VG1EQAREQAREQAREQAREQAREQASSICAxnAQkJREBERABERABERABERABERABEUgvAhLD6XU9VRsREAEREAEREAEREAEREAEREIEkCEgMJwFJSURABERABERABERABERABERABNKLgMRwel1P1UYEREAEREAEREAEREAEREAERCAJAhLDSUBSEhEQAREQAREQAREQAREQAREQgfQikE11Vq1cZWvWrrGKior0qp1qIwIiIAIiIAIiIAIiIAIiIAIikFYE8vLyrKhXkfXp22eL6pWNEC4rL7Ps7Gwvhuvq6rYow7Y6uGjIhIasVyyZZ6VrV9lWw8dYXvfChu0V5SW2dMEXll9YZP0GjWjY3h5vhhTVO9kXrqltj9PpHCIgAiIgAiIgAiIgAiIgAiLQJQlkZZjV1JR4p+6WCOJMPMJVVVVWUlJinVUIx17hVUvnbyaESYMwHjh0tK1atiD2EH0WAREQAREQAREQAREQAREQARFIAwI1zn9bl13oo5u3pDrZhEaniggOFa0oL93EI4yQf+GZx235siU2cYdJVrxsjp1y8im2aOG8cMgWvQ4aPMz+cf\/jtr6s1N6Z+oYNGjzU9tjra84t32+L8tXBIiACIiACIiACIiACIiACIiACzSdQ7QJyt3Sar58z3PxTJ3\/Eq6++agsXLrRJkybZ+PHjkz8wyZQ1tbV28tEH2uczP7ZDDj\/W+vUfYL+87FLbdc\/D7BvbTk4yl8aTzZwxzU4\/8XD7zR9vsw\/efcdu+sNvrGevXvbiGx9ZTk5O4wdrrwiIgAiIgAiIgAiIgAiIgAiIQKcj0GZiePHixfbKK6\/4ucjUutaJ1raw8tJSW7Z0sd394NM2aZfd\/SnOPeObNnjENlZSWtZwymI3x7i8rMS65xdaj16JJ1rHS0dejz94h31tv4P832effGzHHf41K163Vt7hBsJ6IwIiIAIiIAIiIAIiIAIiIAKpQ6DNHq3Uy3lO99t3PzviiCMsM7Pp01xzzTUtopZfWGjbbLu9ffDeO5scX1dbZ+Fv3ZqVVl5SbMcdc7h\/DdvjvUbTcVxIE838vfem2oSJO1iv3olFdTS93ouACIiACIiACIiACIiACIiACHQuAk2r1BaWNz8\/3\/oP6G9VlVVJzUkudKL26quvbvbZMjMyrGfPXrZq1YpNjq11q2Lzt9Z5hMtKi+2YYw+3JctWWa3V2dLFcxP+sZ90pOc4jiefqJW5OcqjxoyzrCREfvQ4vRcBERABERABERABERABERABEegcBNosTDpULys7K7xt9LWmpsYQ0L\/4xS\/siiuuaDRt2Dl1yuv24Xtv2\/Nu8az7znspbPavISy7rGSdHeeE7YKFy\/32Y47++ibp4n1YtHilT0\/aBx58zAoKe22S7Mtf2ccuOf8HNmz4CB+a\/aU9vrrJfn0QAREQAREQAREQAREQAREQARHo3ATaXAwnW33EMHb99df7xzwlc9xr\/33B7rr9ZieiC2zIkGGbHFLjwqSx3G4Fdt\/9j9puu+\/mP\/O+KYum7ebmGIe8wnGD3blGjRlr\/777b7Z61Urb9UtfCbv0KgIiIAIiIAIiIAIiIAIiIAIikAIE2ixMOlr3DBfK3NS84erqau8V5jFJydqPLrjc3p252LbbcbL96+93bHIYnmH+8p1XN69bvr055U2rrKx2YdK1\/nNjr6QjPcdxfPAyhxM88uC9NmbcBHvhjQ\/tkit\/rXDpAEavIiACIiACIiACIiACIiACIpAiBNpMDCNuly5ZYsuWLfNics2aNbZixQpbv359XDQsoNUcIRwyCXOGw+fwGha+4jW\/sMi65RXYtHem+tfysmI74Zgj3erSm79G03FcyCfkG14LCwoNkS8TAREQAREQAREQAREQAREQARFIPQJtJoZ5tvBLL79sr7\/+uqcye\/Zse\/755+2LL76IS6klQpiMysvL7YP3p9nk3b7ckO+AgYNs7hcfuPDm2oa\/bgW9rKjfEOM1Jy\/f7rn\/obiv0XThePIaPHRjGPaEidvb1CmvuXNvfHRTw8n1RgREQAREQAREQAREQAREQAREoNMTaLM5wyNGjDD+2tpqnAd6vROlK5YttaqqKu+tvdItwnX11VfZ\/z3\/71Y5PXOE73v0BcPbXedXqF7jRXiFE+IFbr6yTAREQAREQAREQAREQAREQAREILUItJkYbi8MhT162De+9R07+9vf8Kc8\/5Irbf+vfsmmfjS31Yvw97\/c4leRJuMfXXCpFfXp2+rnUIYiIAIiIAIiIAIiIAIiIAIiIAJtTyBjxowZztlZv\/Jy25+u5WcoGjKh4eCZ779mI8btaHndCxu2EWZd7TzDVldty+bPtHE77tmwr7XeVFRUWPG6dZaXl2c9evbcJNshRfUR5wvX1G6yXR9EQAREQAREQAREQAREQAREQARan8DaRZ\/YhAkbdWKyZ2AKL9Zmc4aTLUhL0vUZOMyWzPvcKso3rjxdWFho3bvl2LqVi6zPgKEtybbJYxDB\/fr330wIN3mgEoiACIiACIiACIiACIiACIiACHQqAj5Mum\/fzh\/uO7DXxpWbB\/caYXPm1NmCz9+30tLSBqAFBQU2dOhQGzlyZMO29nqTCt719mKh84iACIiACIiACIiACIiACIhAWxNYu2jLzpCyc4YRvB0hercMt44WAREQAREQAREQAREQAREQARHoDARSMky6M4BTGURABERABERABERABERABERABFKXgMRw6l47lVwEREAEREAEREAEREAEREAERKCFBCSGWwhOh4mACIiACIiACIiACIiACIiACKQuAYnh1L12KrkIiIAIiIAIiIAIiIAIiIAIiEALCUgMtxCcDhMBERABERABERABERABERABEUhdAhLDqXvtVHIREAEREAEREAEREAEREAEREIEWEpAYbiE4HSYCIiACIiACIiACIiACIiACIpC6BCSGU\/faqeQiIAIiIAIiIAIiIAIiIAIiIAItJCAx3EJwOkwEREAEREAEREAEREAEREAERCB1CUgMp+61U8lFQAREQAREQAREQAREQAREQARaSEBiuIXgdJgIiIAIiIAIiIAIiIAIiIAIiEDqEpAYTt1rp5KLgAiIgAiIgAiIgAiIgAiIgAi0kIDEcAvB6TAREAEREAEREAEREAEREAEREIHUJSAxnLrXTiUXAREQAREQAREQAREQAREQARFoIQGJ4RaC02EiIAIiIAIiIAIiIAIiIAIiIAKpS0BiOHWvnUouAiIgAiIgAiIgAiIgAiIgAiLQQgISwy0Ep8NEQAREQAREQAREQAREQAREQARSl4DEcOpeO5VcBERABERABERABERABERABESghQQkhlsIToeJgAiIgAiIgAiIgAiIgAiIgAikLoH\/B0MIeWOo1m67AAAAAElFTkSuQmCC"
      },
      "request" : {
        "path" : "https:\/\/i.stack.imgur.com\/76qtQ.png",
        "headers" : {
          "Accept" : "image\/png,image\/svg+xml,image\/*;q=0.8,video\/*;q=0.8,*\/*;q=0.5",
          "User-Agent" : "Mozilla\/5.0 (iPhone; CPU iPhone OS 11_3 like Mac OS X) AppleWebKit\/605.1.15 (KHTML, like Gecko)"
        },
        "method" : "GET"
      }
    }
  ]
}